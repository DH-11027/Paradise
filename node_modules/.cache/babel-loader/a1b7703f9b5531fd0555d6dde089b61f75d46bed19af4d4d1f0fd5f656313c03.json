{"ast":null,"code":"// 기술적 지표 계산 함수들\n// 단순 이동평균 계산\nexport function calculateSMA(data,period){let key=arguments.length>2&&arguments[2]!==undefined?arguments[2]:'close';const result=[];for(let i=0;i<data.length;i++){if(i<period-1){result.push(null);}else{const sum=data.slice(i-period+1,i+1).reduce((acc,d)=>acc+(d[key]||0),0);result.push(sum/period);}}return result;}// 볼린저 밴드 계산\nexport function calculateBollingerBands(data){let period=arguments.length>1&&arguments[1]!==undefined?arguments[1]:20;let stdDev=arguments.length>2&&arguments[2]!==undefined?arguments[2]:2;const sma=calculateSMA(data,period);const bands=[];for(let i=0;i<data.length;i++){if(i<period-1){bands.push({upper:null,middle:null,lower:null});}else{const slice=data.slice(i-period+1,i+1);const mean=sma[i];const variance=slice.reduce((acc,d)=>acc+Math.pow(d.close-mean,2),0)/period;const std=Math.sqrt(variance);bands.push({upper:mean+stdDev*std,middle:mean,lower:mean-stdDev*std});}}return bands;}// RSI 계산\nexport function calculateRSI(data){let period=arguments.length>1&&arguments[1]!==undefined?arguments[1]:14;const changes=[];const gains=[];const losses=[];// 가격 변화 계산\nfor(let i=1;i<data.length;i++){const change=data[i].close-data[i-1].close;changes.push(change);gains.push(change>0?change:0);losses.push(change<0?Math.abs(change):0);}const rsi=[null];// 첫 번째 값은 null\n// 첫 번째 평균 계산\nlet avgGain=gains.slice(0,period).reduce((a,b)=>a+b,0)/period;let avgLoss=losses.slice(0,period).reduce((a,b)=>a+b,0)/period;for(let i=period;i<data.length;i++){if(i===period){const rs=avgLoss===0?100:avgGain/avgLoss;rsi.push(100-100/(1+rs));}else{avgGain=(avgGain*(period-1)+gains[i-1])/period;avgLoss=(avgLoss*(period-1)+losses[i-1])/period;const rs=avgLoss===0?100:avgGain/avgLoss;rsi.push(100-100/(1+rs));}}// 처음 period 개의 null 값 추가\nwhile(rsi.length<data.length){rsi.unshift(null);}return rsi;}// MACD 계산\nexport function calculateMACD(data){let fastPeriod=arguments.length>1&&arguments[1]!==undefined?arguments[1]:12;let slowPeriod=arguments.length>2&&arguments[2]!==undefined?arguments[2]:26;let signalPeriod=arguments.length>3&&arguments[3]!==undefined?arguments[3]:9;const emaFast=calculateEMA(data,fastPeriod);const emaSlow=calculateEMA(data,slowPeriod);const macd=[];const signal=[];const histogram=[];// MACD 라인 계산\nfor(let i=0;i<data.length;i++){if(i<slowPeriod-1){macd.push(null);}else{macd.push(emaFast[i]-emaSlow[i]);}}// Signal 라인 계산 (MACD의 EMA)\nconst macdData=macd.filter(v=>v!==null).map(v=>({close:v}));const signalEMA=calculateEMA(macdData,signalPeriod);let signalIndex=0;for(let i=0;i<data.length;i++){if(macd[i]===null){signal.push(null);histogram.push(null);}else if(signalIndex<signalPeriod-1){signal.push(null);histogram.push(null);signalIndex++;}else{signal.push(signalEMA[signalIndex-signalPeriod+1]);histogram.push(macd[i]-signal[i]);signalIndex++;}}return{macd,signal,histogram};}// 지수 이동평균 계산\nexport function calculateEMA(data,period){const multiplier=2/(period+1);const ema=[];// 첫 번째 EMA는 SMA로 시작\nconst firstSMA=data.slice(0,period).reduce((acc,d)=>acc+d.close,0)/period;for(let i=0;i<data.length;i++){if(i<period-1){ema.push(null);}else if(i===period-1){ema.push(firstSMA);}else{ema.push((data[i].close-ema[i-1])*multiplier+ema[i-1]);}}return ema;}// 매수/매도 신호 점수 계산\nexport function calculateSignalScore(data,index){var _current$_flows,_current$_flows2;if(!data||index<60||index>=data.length)return{score:0,signals:[]};const current=data[index];const signals=[];let score=0;// 1. 이동평균선 배열 (20 < 60 < 120)\nif(current.ma20&&current.ma60&&current.ma120){if(current.ma20>current.ma60&&current.ma60>current.ma120){score+=20;signals.push({name:\"정배열\",type:\"bullish\",weight:20});}else if(current.ma20<current.ma60&&current.ma60<current.ma120){score-=20;signals.push({name:\"역배열\",type:\"bearish\",weight:-20});}}// 2. 가격 vs 이동평균선\nif(current.ma20){if(current.close>current.ma20){score+=10;signals.push({name:\"20일선 위\",type:\"bullish\",weight:10});}else{score-=10;signals.push({name:\"20일선 아래\",type:\"bearish\",weight:-10});}}// 3. 볼린저 밴드 위치\nif(current.bbUpper&&current.bbLower){if(current.close>current.bbUpper){score-=15;// 과매수\nsignals.push({name:\"BB 상단 돌파\",type:\"bearish\",weight:-15});}else if(current.close<current.bbLower){score+=15;// 과매도\nsignals.push({name:\"BB 하단 돌파\",type:\"bullish\",weight:15});}}// 4. RSI\nif(current.rsi14!=null){if(current.rsi14>70){score-=15;signals.push({name:\"RSI 과매수\",type:\"bearish\",weight:-15});}else if(current.rsi14<30){score+=15;signals.push({name:\"RSI 과매도\",type:\"bullish\",weight:15});}}// 5. MFI\nif(current.mfi14!=null){if(current.mfi14>80){score-=10;signals.push({name:\"MFI 과매수\",type:\"bearish\",weight:-10});}else if(current.mfi14<20){score+=10;signals.push({name:\"MFI 과매도\",type:\"bullish\",weight:10});}}// 6. 거래량\nconst avgVolume=data.slice(index-20,index).reduce((acc,d)=>acc+d.volume,0)/20;if(current.volume>avgVolume*1.5&&current.close>data[index-1].close){score+=10;signals.push({name:\"거래량 급증(상승)\",type:\"bullish\",weight:10});}else if(current.volume>avgVolume*1.5&&current.close<data[index-1].close){score-=10;signals.push({name:\"거래량 급증(하락)\",type:\"bearish\",weight:-10});}// 7. 수급 (외국인 + 기관)\nconst smartMoney=(((_current$_flows=current._flows)===null||_current$_flows===void 0?void 0:_current$_flows.외국인)||0)+(((_current$_flows2=current._flows)===null||_current$_flows2===void 0?void 0:_current$_flows2.기관합계)||0);if(smartMoney>0){score+=20;signals.push({name:\"스마트머니 매수\",type:\"bullish\",weight:20});}else if(smartMoney<0){score-=20;signals.push({name:\"스마트머니 매도\",type:\"bearish\",weight:-20});}return{score,signals};}","map":{"version":3,"names":["calculateSMA","data","period","key","arguments","length","undefined","result","i","push","sum","slice","reduce","acc","d","calculateBollingerBands","stdDev","sma","bands","upper","middle","lower","mean","variance","Math","pow","close","std","sqrt","calculateRSI","changes","gains","losses","change","abs","rsi","avgGain","a","b","avgLoss","rs","unshift","calculateMACD","fastPeriod","slowPeriod","signalPeriod","emaFast","calculateEMA","emaSlow","macd","signal","histogram","macdData","filter","v","map","signalEMA","signalIndex","multiplier","ema","firstSMA","calculateSignalScore","index","_current$_flows","_current$_flows2","score","signals","current","ma20","ma60","ma120","name","type","weight","bbUpper","bbLower","rsi14","mfi14","avgVolume","volume","smartMoney","_flows","외국인","기관합계"],"sources":["C:/Users/kloud/OneDrive/Desktop/Paradise/src/utils/technicalIndicators.js"],"sourcesContent":["// 기술적 지표 계산 함수들\n\n// 단순 이동평균 계산\nexport function calculateSMA(data, period, key = 'close') {\n  const result = [];\n  for (let i = 0; i < data.length; i++) {\n    if (i < period - 1) {\n      result.push(null);\n    } else {\n      const sum = data.slice(i - period + 1, i + 1).reduce((acc, d) => acc + (d[key] || 0), 0);\n      result.push(sum / period);\n    }\n  }\n  return result;\n}\n\n// 볼린저 밴드 계산\nexport function calculateBollingerBands(data, period = 20, stdDev = 2) {\n  const sma = calculateSMA(data, period);\n  const bands = [];\n  \n  for (let i = 0; i < data.length; i++) {\n    if (i < period - 1) {\n      bands.push({ upper: null, middle: null, lower: null });\n    } else {\n      const slice = data.slice(i - period + 1, i + 1);\n      const mean = sma[i];\n      const variance = slice.reduce((acc, d) => acc + Math.pow(d.close - mean, 2), 0) / period;\n      const std = Math.sqrt(variance);\n      \n      bands.push({\n        upper: mean + (stdDev * std),\n        middle: mean,\n        lower: mean - (stdDev * std)\n      });\n    }\n  }\n  return bands;\n}\n\n// RSI 계산\nexport function calculateRSI(data, period = 14) {\n  const changes = [];\n  const gains = [];\n  const losses = [];\n  \n  // 가격 변화 계산\n  for (let i = 1; i < data.length; i++) {\n    const change = data[i].close - data[i - 1].close;\n    changes.push(change);\n    gains.push(change > 0 ? change : 0);\n    losses.push(change < 0 ? Math.abs(change) : 0);\n  }\n  \n  const rsi = [null]; // 첫 번째 값은 null\n  \n  // 첫 번째 평균 계산\n  let avgGain = gains.slice(0, period).reduce((a, b) => a + b, 0) / period;\n  let avgLoss = losses.slice(0, period).reduce((a, b) => a + b, 0) / period;\n  \n  for (let i = period; i < data.length; i++) {\n    if (i === period) {\n      const rs = avgLoss === 0 ? 100 : avgGain / avgLoss;\n      rsi.push(100 - (100 / (1 + rs)));\n    } else {\n      avgGain = (avgGain * (period - 1) + gains[i - 1]) / period;\n      avgLoss = (avgLoss * (period - 1) + losses[i - 1]) / period;\n      const rs = avgLoss === 0 ? 100 : avgGain / avgLoss;\n      rsi.push(100 - (100 / (1 + rs)));\n    }\n  }\n  \n  // 처음 period 개의 null 값 추가\n  while (rsi.length < data.length) {\n    rsi.unshift(null);\n  }\n  \n  return rsi;\n}\n\n// MACD 계산\nexport function calculateMACD(data, fastPeriod = 12, slowPeriod = 26, signalPeriod = 9) {\n  const emaFast = calculateEMA(data, fastPeriod);\n  const emaSlow = calculateEMA(data, slowPeriod);\n  \n  const macd = [];\n  const signal = [];\n  const histogram = [];\n  \n  // MACD 라인 계산\n  for (let i = 0; i < data.length; i++) {\n    if (i < slowPeriod - 1) {\n      macd.push(null);\n    } else {\n      macd.push(emaFast[i] - emaSlow[i]);\n    }\n  }\n  \n  // Signal 라인 계산 (MACD의 EMA)\n  const macdData = macd.filter(v => v !== null).map(v => ({ close: v }));\n  const signalEMA = calculateEMA(macdData, signalPeriod);\n  \n  let signalIndex = 0;\n  for (let i = 0; i < data.length; i++) {\n    if (macd[i] === null) {\n      signal.push(null);\n      histogram.push(null);\n    } else if (signalIndex < signalPeriod - 1) {\n      signal.push(null);\n      histogram.push(null);\n      signalIndex++;\n    } else {\n      signal.push(signalEMA[signalIndex - signalPeriod + 1]);\n      histogram.push(macd[i] - signal[i]);\n      signalIndex++;\n    }\n  }\n  \n  return { macd, signal, histogram };\n}\n\n// 지수 이동평균 계산\nexport function calculateEMA(data, period) {\n  const multiplier = 2 / (period + 1);\n  const ema = [];\n  \n  // 첫 번째 EMA는 SMA로 시작\n  const firstSMA = data.slice(0, period).reduce((acc, d) => acc + d.close, 0) / period;\n  \n  for (let i = 0; i < data.length; i++) {\n    if (i < period - 1) {\n      ema.push(null);\n    } else if (i === period - 1) {\n      ema.push(firstSMA);\n    } else {\n      ema.push((data[i].close - ema[i - 1]) * multiplier + ema[i - 1]);\n    }\n  }\n  \n  return ema;\n}\n\n// 매수/매도 신호 점수 계산\nexport function calculateSignalScore(data, index) {\n  if (!data || index < 60 || index >= data.length) return { score: 0, signals: [] };\n  \n  const current = data[index];\n  const signals = [];\n  let score = 0;\n  \n  // 1. 이동평균선 배열 (20 < 60 < 120)\n  if (current.ma20 && current.ma60 && current.ma120) {\n    if (current.ma20 > current.ma60 && current.ma60 > current.ma120) {\n      score += 20;\n      signals.push({ name: \"정배열\", type: \"bullish\", weight: 20 });\n    } else if (current.ma20 < current.ma60 && current.ma60 < current.ma120) {\n      score -= 20;\n      signals.push({ name: \"역배열\", type: \"bearish\", weight: -20 });\n    }\n  }\n  \n  // 2. 가격 vs 이동평균선\n  if (current.ma20) {\n    if (current.close > current.ma20) {\n      score += 10;\n      signals.push({ name: \"20일선 위\", type: \"bullish\", weight: 10 });\n    } else {\n      score -= 10;\n      signals.push({ name: \"20일선 아래\", type: \"bearish\", weight: -10 });\n    }\n  }\n  \n  // 3. 볼린저 밴드 위치\n  if (current.bbUpper && current.bbLower) {\n    if (current.close > current.bbUpper) {\n      score -= 15; // 과매수\n      signals.push({ name: \"BB 상단 돌파\", type: \"bearish\", weight: -15 });\n    } else if (current.close < current.bbLower) {\n      score += 15; // 과매도\n      signals.push({ name: \"BB 하단 돌파\", type: \"bullish\", weight: 15 });\n    }\n  }\n  \n  // 4. RSI\n  if (current.rsi14 != null) {\n    if (current.rsi14 > 70) {\n      score -= 15;\n      signals.push({ name: \"RSI 과매수\", type: \"bearish\", weight: -15 });\n    } else if (current.rsi14 < 30) {\n      score += 15;\n      signals.push({ name: \"RSI 과매도\", type: \"bullish\", weight: 15 });\n    }\n  }\n  \n  // 5. MFI\n  if (current.mfi14 != null) {\n    if (current.mfi14 > 80) {\n      score -= 10;\n      signals.push({ name: \"MFI 과매수\", type: \"bearish\", weight: -10 });\n    } else if (current.mfi14 < 20) {\n      score += 10;\n      signals.push({ name: \"MFI 과매도\", type: \"bullish\", weight: 10 });\n    }\n  }\n  \n  // 6. 거래량\n  const avgVolume = data.slice(index - 20, index).reduce((acc, d) => acc + d.volume, 0) / 20;\n  if (current.volume > avgVolume * 1.5 && current.close > data[index - 1].close) {\n    score += 10;\n    signals.push({ name: \"거래량 급증(상승)\", type: \"bullish\", weight: 10 });\n  } else if (current.volume > avgVolume * 1.5 && current.close < data[index - 1].close) {\n    score -= 10;\n    signals.push({ name: \"거래량 급증(하락)\", type: \"bearish\", weight: -10 });\n  }\n  \n  // 7. 수급 (외국인 + 기관)\n  const smartMoney = (current._flows?.외국인 || 0) + (current._flows?.기관합계 || 0);\n  if (smartMoney > 0) {\n    score += 20;\n    signals.push({ name: \"스마트머니 매수\", type: \"bullish\", weight: 20 });\n  } else if (smartMoney < 0) {\n    score -= 20;\n    signals.push({ name: \"스마트머니 매도\", type: \"bearish\", weight: -20 });\n  }\n  \n  return { score, signals };\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}