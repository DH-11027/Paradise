{"ast":null,"code":"import React from\"react\";import{ResponsiveContainer,ComposedChart,Bar,Line,XAxis,YAxis,CartesianGrid,Tooltip as RechartsTooltip,Legend}from\"recharts\";import{Card,CardContent,CardHeader,CardTitle}from\"../ui/card\";import{Tooltip,TooltipContent,TooltipProvider,TooltipTrigger}from\"../ui/tooltip\";import{Info,TrendingUp,TrendingDown,Users}from\"lucide-react\";import{fmtDate,toNum}from\"../../utils/dataUtils\";import{INVESTOR_COLORS}from\"../../constants/chartColors\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export default function EnhancedInvestorFlowChart(_ref){let{data,selectedCats,unitScale,unitName}=_ref;const latest=data[data.length-1]||{};// 오늘의 수급 주체별 순위\nconst todayFlows=selectedCats.map(cat=>{var _latest$_flows,_latest$_flows2,_latest$_flows3;return{name:cat,value:((_latest$_flows=latest._flows)===null||_latest$_flows===void 0?void 0:_latest$_flows[cat])||(cat===\"외국인합계\"?toNum((_latest$_flows2=latest._flows)===null||_latest$_flows2===void 0?void 0:_latest$_flows2[\"외국인\"])+toNum((_latest$_flows3=latest._flows)===null||_latest$_flows3===void 0?void 0:_latest$_flows3[\"기타외국인\"]):0),color:INVESTOR_COLORS[cat]};}).sort((a,b)=>Math.abs(b.value)-Math.abs(a.value));// 최근 5일 누적 수급\nconst recent5Days=data.slice(-5);const cumulative5Days=selectedCats.map(cat=>{const sum=recent5Days.reduce((acc,d)=>{var _d$_flows,_d$_flows2,_d$_flows3;const value=((_d$_flows=d._flows)===null||_d$_flows===void 0?void 0:_d$_flows[cat])||(cat===\"외국인합계\"?toNum((_d$_flows2=d._flows)===null||_d$_flows2===void 0?void 0:_d$_flows2[\"외국인\"])+toNum((_d$_flows3=d._flows)===null||_d$_flows3===void 0?void 0:_d$_flows3[\"기타외국인\"]):0);return acc+value;},0);return{name:cat,value:sum,color:INVESTOR_COLORS[cat]};}).sort((a,b)=>b.value-a.value);const formatValue=function(value){let isScaled=arguments.length>1&&arguments[1]!==undefined?arguments[1]:true;// If isScaled is false, we need to scale the value\nconst displayValue=isScaled?value:value/unitScale;if(unitScale===100000000)return\"\".concat(displayValue.toFixed(1),\"\\uC5B5\");if(unitScale===1000000)return\"\".concat(displayValue.toFixed(0),\"\\uBC31\\uB9CC\");if(unitScale===1)return\"\".concat(displayValue.toLocaleString(),\"\\uC6D0\");return displayValue.toLocaleString();};return/*#__PURE__*/_jsx(TooltipProvider,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-4\",children:[/*#__PURE__*/_jsxs(Card,{className:\"shadow-md\",children:[/*#__PURE__*/_jsx(CardHeader,{children:/*#__PURE__*/_jsxs(CardTitle,{className:\"flex items-center gap-2 text-base\",children:[/*#__PURE__*/_jsx(Users,{className:\"w-4 h-4\"}),\"\\uD22C\\uC790\\uC8FC\\uCCB4\\uBCC4 \\uC77C\\uBCC4 \\uC218\\uAE09 / \\uB2E8\\uC704: \",unitName,/*#__PURE__*/_jsxs(Tooltip,{children:[/*#__PURE__*/_jsx(TooltipTrigger,{children:/*#__PURE__*/_jsx(Info,{className:\"w-4 h-4 text-gray-500\"})}),/*#__PURE__*/_jsxs(TooltipContent,{className:\"max-w-sm\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"font-semibold mb-1\",children:\"\\uD22C\\uC790\\uC8FC\\uCCB4\\uBCC4 \\uC21C\\uB9E4\\uC218 \\uBD84\\uC11D\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-sm mb-2\",children:\"\\uAC01 \\uD22C\\uC790\\uC8FC\\uCCB4\\uC758 \\uC77C\\uBCC4 \\uC21C\\uB9E4\\uC218 \\uAE08\\uC561\\uC744 \\uC2DC\\uAC01\\uD654\\uD569\\uB2C8\\uB2E4. \\uC2A4\\uB9C8\\uD2B8\\uBA38\\uB2C8(\\uC678\\uAD6D\\uC778+\\uAE30\\uAD00)\\uC640 \\uAC1C\\uC778\\uC758 divergence\\uAC00 \\uD575\\uC2EC\\uC785\\uB2C8\\uB2E4.\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-xs space-y-1\",children:[/*#__PURE__*/_jsxs(\"p\",{children:[\"\\u2022 \",/*#__PURE__*/_jsx(\"span\",{className:\"text-red-600\",children:\"\\uC704\\uCABD \\uB9C9\\uB300\"}),\": \\uC21C\\uB9E4\\uC218 (\\uB9E4\\uC218 > \\uB9E4\\uB3C4)\"]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"\\u2022 \",/*#__PURE__*/_jsx(\"span\",{className:\"text-blue-600\",children:\"\\uC544\\uB798\\uCABD \\uB9C9\\uB300\"}),\": \\uC21C\\uB9E4\\uB3C4 (\\uB9E4\\uB3C4 > \\uB9E4\\uC218)\"]})]})]})]})]})}),/*#__PURE__*/_jsxs(CardContent,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"mb-4 p-3 bg-gray-50 rounded-lg\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between items-center mb-2\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"text-sm font-semibold\",children:\"\\uC624\\uB298\\uC758 \\uC218\\uAE09 TOP 3\"}),/*#__PURE__*/_jsx(\"span\",{className:\"text-xs text-gray-500\",children:fmtDate(latest.date)})]}),/*#__PURE__*/_jsx(\"div\",{className:\"space-y-1\",children:todayFlows.slice(0,3).map((flow,idx)=>/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between items-center\",children:[/*#__PURE__*/_jsxs(\"span\",{className:\"text-sm\",style:{color:flow.color},children:[idx+1,\". \",flow.name]}),/*#__PURE__*/_jsxs(\"span\",{className:\"text-sm font-bold \".concat(flow.value>0?'text-red-600':'text-blue-600'),children:[flow.value>0?'+':'',formatValue(flow.value,false)]})]},flow.name))})]}),/*#__PURE__*/_jsx(\"div\",{className:\"h-72\",children:/*#__PURE__*/_jsx(ResponsiveContainer,{children:/*#__PURE__*/_jsxs(ComposedChart,{data:data,stackOffset:\"sign\",children:[/*#__PURE__*/_jsx(CartesianGrid,{strokeDasharray:\"3 3\"}),/*#__PURE__*/_jsx(XAxis,{dataKey:d=>fmtDate(d.date),tick:{fontSize:12}}),/*#__PURE__*/_jsx(YAxis,{tick:{fontSize:12},domain:[\"auto\",\"auto\"]}),/*#__PURE__*/_jsx(RechartsTooltip,{formatter:(v,name)=>{if(typeof v===\"number\"){return[formatValue(v),name];}return v;},contentStyle:{backgroundColor:'rgba(255, 255, 255, 0.95)',border:'1px solid #e5e7eb'}}),/*#__PURE__*/_jsx(Legend,{}),selectedCats.map(k=>/*#__PURE__*/_jsx(Bar,{stackId:\"flows\",name:k,fill:INVESTOR_COLORS[k],dataKey:d=>{var _d$_flows$k;return(d._flows&&((_d$_flows$k=d._flows[k])!==null&&_d$_flows$k!==void 0?_d$_flows$k:k===\"외국인합계\"?toNum(d._flows[\"외국인\"])+toNum(d._flows[\"기타외국인\"]):0))/unitScale;}},k))]})})}),/*#__PURE__*/_jsxs(\"div\",{className:\"mt-4 p-3 bg-blue-50 rounded-lg\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"text-sm font-semibold mb-2\",children:\"\\uCD5C\\uADFC 5\\uC77C \\uB204\\uC801 \\uC218\\uAE09\"}),/*#__PURE__*/_jsx(\"div\",{className:\"grid grid-cols-3 gap-2\",children:cumulative5Days.map(flow=>/*#__PURE__*/_jsxs(\"div\",{className:\"text-center\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"text-xs\",style:{color:flow.color},children:flow.name}),/*#__PURE__*/_jsxs(\"p\",{className:\"text-sm font-bold \".concat(flow.value>0?'text-red-600':'text-blue-600'),children:[flow.value>0?'+':'',formatValue(flow.value,false)]})]},flow.name))})]})]})]}),/*#__PURE__*/_jsxs(Card,{className:\"shadow-md\",children:[/*#__PURE__*/_jsx(CardHeader,{children:/*#__PURE__*/_jsxs(CardTitle,{className:\"flex items-center gap-2 text-base\",children:[\"\\uD22C\\uC790\\uC8FC\\uCCB4\\uBCC4 \\uB204\\uC801 \\uC218\\uAE09 \\uCD94\\uC774 / \\uB2E8\\uC704: \",unitName]})}),/*#__PURE__*/_jsxs(CardContent,{children:[/*#__PURE__*/_jsx(\"div\",{className:\"h-72\",children:/*#__PURE__*/_jsx(ResponsiveContainer,{children:/*#__PURE__*/_jsxs(ComposedChart,{data:data,children:[/*#__PURE__*/_jsx(CartesianGrid,{strokeDasharray:\"3 3\"}),/*#__PURE__*/_jsx(XAxis,{dataKey:d=>fmtDate(d.date),tick:{fontSize:12}}),/*#__PURE__*/_jsx(YAxis,{tick:{fontSize:12},domain:[\"auto\",\"auto\"]}),/*#__PURE__*/_jsx(RechartsTooltip,{formatter:(v,name)=>{if(typeof v===\"number\"){return[formatValue(v),name];}return v;},contentStyle:{backgroundColor:'rgba(255, 255, 255, 0.95)',border:'1px solid #e5e7eb'}}),/*#__PURE__*/_jsx(Legend,{}),selectedCats.map(k=>/*#__PURE__*/_jsx(Line,{type:\"monotone\",dot:false,name:k,stroke:INVESTOR_COLORS[k],strokeWidth:2,dataKey:d=>{var _d$_cum$k;return(d._cum&&((_d$_cum$k=d._cum[k])!==null&&_d$_cum$k!==void 0?_d$_cum$k:k===\"외국인합계\"?toNum(d._cum[\"외국인\"])+toNum(d._cum[\"기타외국인\"]):0))/unitScale;}},k))]})})}),/*#__PURE__*/_jsxs(\"div\",{className:\"mt-4 p-3 bg-amber-50 rounded-lg\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"text-xs font-semibold text-amber-800 mb-1\",children:\"\\uD83D\\uDCA1 \\uC804\\uBB38\\uAC00 \\uD301\"}),/*#__PURE__*/_jsxs(\"p\",{className:\"text-xs text-amber-700\",children:[\"\\u2022 \\uC678\\uAD6D\\uC778\\uACFC \\uAE30\\uAD00\\uC774 \\uB3D9\\uC2DC\\uC5D0 \\uB9E4\\uC218\\uD558\\uBA74 \\uAC15\\uD55C \\uC0C1\\uC2B9 \\uC2E0\\uD638\",/*#__PURE__*/_jsx(\"br\",{}),\"\\u2022 \\uAC1C\\uC778 \\uB9E4\\uB3C4 + \\uAE30\\uAD00 \\uB9E4\\uC218 = \\uAE30\\uAD00\\uC758 \\uC800\\uAC00 \\uB9E4\\uC9D1 \\uAC00\\uB2A5\\uC131\",/*#__PURE__*/_jsx(\"br\",{}),\"\\u2022 \\uB204\\uC801 \\uC218\\uAE09\\uC774 divergence\\uB97C \\uBCF4\\uC774\\uBA74 \\uCD94\\uC138 \\uC804\\uD658 \\uC784\\uBC15\"]})]})]})]})]})});}","map":{"version":3,"names":["React","ResponsiveContainer","ComposedChart","Bar","Line","XAxis","YAxis","CartesianGrid","Tooltip","RechartsTooltip","Legend","Card","CardContent","CardHeader","CardTitle","TooltipContent","TooltipProvider","TooltipTrigger","Info","TrendingUp","TrendingDown","Users","fmtDate","toNum","INVESTOR_COLORS","jsx","_jsx","jsxs","_jsxs","EnhancedInvestorFlowChart","_ref","data","selectedCats","unitScale","unitName","latest","length","todayFlows","map","cat","_latest$_flows","_latest$_flows2","_latest$_flows3","name","value","_flows","color","sort","a","b","Math","abs","recent5Days","slice","cumulative5Days","sum","reduce","acc","d","_d$_flows","_d$_flows2","_d$_flows3","formatValue","isScaled","arguments","undefined","displayValue","concat","toFixed","toLocaleString","children","className","date","flow","idx","style","stackOffset","strokeDasharray","dataKey","tick","fontSize","domain","formatter","v","contentStyle","backgroundColor","border","k","stackId","fill","_d$_flows$k","type","dot","stroke","strokeWidth","_d$_cum$k","_cum"],"sources":["C:/Users/kloud/OneDrive/Desktop/Paradise/src/components/charts/EnhancedInvestorFlowChart.jsx"],"sourcesContent":["import React from \"react\";\nimport {\n  ResponsiveContainer,\n  ComposedChart,\n  Bar,\n  Line,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip as RechartsTooltip,\n  Legend,\n} from \"recharts\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"../ui/card\";\nimport { Tooltip, TooltipContent, TooltipProvider, TooltipTrigger } from \"../ui/tooltip\";\nimport { Info, TrendingUp, TrendingDown, Users } from \"lucide-react\";\nimport { fmtDate, toNum } from \"../../utils/dataUtils\";\nimport { INVESTOR_COLORS } from \"../../constants/chartColors\";\n\nexport default function EnhancedInvestorFlowChart({ data, selectedCats, unitScale, unitName }) {\n  const latest = data[data.length - 1] || {};\n  \n  // 오늘의 수급 주체별 순위\n  const todayFlows = selectedCats.map(cat => ({\n    name: cat,\n    value: latest._flows?.[cat] || (cat === \"외국인합계\" ? \n      (toNum(latest._flows?.[\"외국인\"]) + toNum(latest._flows?.[\"기타외국인\"])) : 0),\n    color: INVESTOR_COLORS[cat]\n  })).sort((a, b) => Math.abs(b.value) - Math.abs(a.value));\n\n  // 최근 5일 누적 수급\n  const recent5Days = data.slice(-5);\n  const cumulative5Days = selectedCats.map(cat => {\n    const sum = recent5Days.reduce((acc, d) => {\n      const value = d._flows?.[cat] || (cat === \"외국인합계\" ? \n        (toNum(d._flows?.[\"외국인\"]) + toNum(d._flows?.[\"기타외국인\"])) : 0);\n      return acc + value;\n    }, 0);\n    return { name: cat, value: sum, color: INVESTOR_COLORS[cat] };\n  }).sort((a, b) => b.value - a.value);\n\n  const formatValue = (value, isScaled = true) => {\n    // If isScaled is false, we need to scale the value\n    const displayValue = isScaled ? value : value / unitScale;\n    if (unitScale === 100000000) return `${displayValue.toFixed(1)}억`;\n    if (unitScale === 1000000) return `${displayValue.toFixed(0)}백만`;\n    if (unitScale === 1) return `${displayValue.toLocaleString()}원`;\n    return displayValue.toLocaleString();\n  };\n\n  return (\n    <TooltipProvider>\n      <div className=\"space-y-4\">\n        {/* 일별 수급 차트 */}\n        <Card className=\"shadow-md\">\n          <CardHeader>\n            <CardTitle className=\"flex items-center gap-2 text-base\">\n              <Users className=\"w-4 h-4\"/>\n              투자주체별 일별 수급 / 단위: {unitName}\n              <Tooltip>\n                <TooltipTrigger>\n                  <Info className=\"w-4 h-4 text-gray-500\" />\n                </TooltipTrigger>\n                <TooltipContent className=\"max-w-sm\">\n                  <p className=\"font-semibold mb-1\">투자주체별 순매수 분석</p>\n                  <p className=\"text-sm mb-2\">\n                    각 투자주체의 일별 순매수 금액을 시각화합니다. 스마트머니(외국인+기관)와 개인의 divergence가 핵심입니다.\n                  </p>\n                  <div className=\"text-xs space-y-1\">\n                    <p>• <span className=\"text-red-600\">위쪽 막대</span>: 순매수 (매수 > 매도)</p>\n                    <p>• <span className=\"text-blue-600\">아래쪽 막대</span>: 순매도 (매도 > 매수)</p>\n                  </div>\n                </TooltipContent>\n              </Tooltip>\n            </CardTitle>\n          </CardHeader>\n          <CardContent>\n            {/* 오늘의 수급 요약 */}\n            <div className=\"mb-4 p-3 bg-gray-50 rounded-lg\">\n              <div className=\"flex justify-between items-center mb-2\">\n                <h4 className=\"text-sm font-semibold\">오늘의 수급 TOP 3</h4>\n                <span className=\"text-xs text-gray-500\">{fmtDate(latest.date)}</span>\n              </div>\n              <div className=\"space-y-1\">\n                {todayFlows.slice(0, 3).map((flow, idx) => (\n                  <div key={flow.name} className=\"flex justify-between items-center\">\n                    <span className=\"text-sm\" style={{ color: flow.color }}>\n                      {idx + 1}. {flow.name}\n                    </span>\n                    <span className={`text-sm font-bold ${flow.value > 0 ? 'text-red-600' : 'text-blue-600'}`}>\n                      {flow.value > 0 ? '+' : ''}{formatValue(flow.value, false)}\n                    </span>\n                  </div>\n                ))}\n              </div>\n            </div>\n\n            {/* 차트 */}\n            <div className=\"h-72\">\n              <ResponsiveContainer>\n                <ComposedChart data={data} stackOffset=\"sign\">\n                  <CartesianGrid strokeDasharray=\"3 3\" />\n                  <XAxis dataKey={(d) => fmtDate(d.date)} tick={{ fontSize: 12 }} />\n                  <YAxis tick={{ fontSize: 12 }} domain={[\"auto\", \"auto\"]} />\n                  <RechartsTooltip \n                    formatter={(v, name) => {\n                      if (typeof v === \"number\") {\n                        return [formatValue(v), name];\n                      }\n                      return v;\n                    }}\n                    contentStyle={{ backgroundColor: 'rgba(255, 255, 255, 0.95)', border: '1px solid #e5e7eb' }}\n                  />\n                  <Legend />\n                  {selectedCats.map((k) => (\n                    <Bar \n                      key={k} \n                      stackId=\"flows\" \n                      name={k} \n                      fill={INVESTOR_COLORS[k]}\n                      dataKey={(d) => (d._flows && (d._flows[k] ?? \n                        (k === \"외국인합계\" ? (toNum(d._flows[\"외국인\"]) + toNum(d._flows[\"기타외국인\"])) : 0))) / unitScale} \n                    />\n                  ))}\n                </ComposedChart>\n              </ResponsiveContainer>\n            </div>\n\n            {/* 5일 누적 요약 */}\n            <div className=\"mt-4 p-3 bg-blue-50 rounded-lg\">\n              <h4 className=\"text-sm font-semibold mb-2\">최근 5일 누적 수급</h4>\n              <div className=\"grid grid-cols-3 gap-2\">\n                {cumulative5Days.map(flow => (\n                  <div key={flow.name} className=\"text-center\">\n                    <p className=\"text-xs\" style={{ color: flow.color }}>{flow.name}</p>\n                    <p className={`text-sm font-bold ${flow.value > 0 ? 'text-red-600' : 'text-blue-600'}`}>\n                      {flow.value > 0 ? '+' : ''}{formatValue(flow.value, false)}\n                    </p>\n                  </div>\n                ))}\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n\n        {/* 누적 수급 차트 */}\n        <Card className=\"shadow-md\">\n          <CardHeader>\n            <CardTitle className=\"flex items-center gap-2 text-base\">\n              투자주체별 누적 수급 추이 / 단위: {unitName}\n            </CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"h-72\">\n              <ResponsiveContainer>\n                <ComposedChart data={data}>\n                  <CartesianGrid strokeDasharray=\"3 3\" />\n                  <XAxis dataKey={(d) => fmtDate(d.date)} tick={{ fontSize: 12 }} />\n                  <YAxis tick={{ fontSize: 12 }} domain={[\"auto\", \"auto\"]} />\n                  <RechartsTooltip \n                    formatter={(v, name) => {\n                      if (typeof v === \"number\") {\n                        return [formatValue(v), name];\n                      }\n                      return v;\n                    }}\n                    contentStyle={{ backgroundColor: 'rgba(255, 255, 255, 0.95)', border: '1px solid #e5e7eb' }}\n                  />\n                  <Legend />\n                  {selectedCats.map((k) => (\n                    <Line \n                      key={k} \n                      type=\"monotone\" \n                      dot={false} \n                      name={k} \n                      stroke={INVESTOR_COLORS[k]}\n                      strokeWidth={2}\n                      dataKey={(d) => (d._cum && (d._cum[k] ?? \n                        (k === \"외국인합계\" ? (toNum(d._cum[\"외국인\"]) + toNum(d._cum[\"기타외국인\"])) : 0))) / unitScale} \n                    />\n                  ))}\n                </ComposedChart>\n              </ResponsiveContainer>\n            </div>\n\n            <div className=\"mt-4 p-3 bg-amber-50 rounded-lg\">\n              <p className=\"text-xs font-semibold text-amber-800 mb-1\">💡 전문가 팁</p>\n              <p className=\"text-xs text-amber-700\">\n                • 외국인과 기관이 동시에 매수하면 강한 상승 신호<br/>\n                • 개인 매도 + 기관 매수 = 기관의 저가 매집 가능성<br/>\n                • 누적 수급이 divergence를 보이면 추세 전환 임박\n              </p>\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n    </TooltipProvider>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}