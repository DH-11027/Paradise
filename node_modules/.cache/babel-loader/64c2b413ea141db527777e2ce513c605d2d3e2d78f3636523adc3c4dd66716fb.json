{"ast":null,"code":"import _objectSpread from\"C:/Users/kloud/OneDrive/Desktop/Paradise/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";// =============================\n// Institutional-Grade Analytics Module  \n// Advanced Quantitative Trading Algorithms\n// Real Money Making System v2.0\n// =============================\nimport{toNum}from'./dataUtils';// Market Regime Detection\nexport function detectMarketRegime(data,index){if(!data||index<20)return'UNKNOWN';const prev20=data.slice(Math.max(0,index-20),index+1);const prev60=data.slice(Math.max(0,index-60),index+1);// 1. Trend Analysis\nconst ma20=prev20.reduce((sum,d)=>sum+d.close,0)/prev20.length;const ma60=prev60.reduce((sum,d)=>sum+d.close,0)/prev60.length;const currentPrice=data[index].close;const trendStrength=(currentPrice-ma60)/ma60;const momentum=(ma20-ma60)/ma60;// 2. Volatility Regime\nconst returns20=[];for(let i=1;i<prev20.length;i++){returns20.push((prev20[i].close-prev20[i-1].close)/prev20[i-1].close);}const vol20=Math.sqrt(returns20.reduce((sum,r)=>sum+r*r,0)/returns20.length)*Math.sqrt(252);// 3. Volume Regime\nconst avgVol20=prev20.reduce((sum,d)=>sum+d.volume,0)/prev20.length;const avgVol60=prev60.reduce((sum,d)=>sum+d.volume,0)/prev60.length;const volumeTrend=(avgVol20-avgVol60)/avgVol60;// Regime Classification\nif(trendStrength>0.1&&momentum>0.05&&vol20<0.3){return'BULL_TRENDING';}else if(trendStrength<-0.1&&momentum<-0.05){return'BEAR_TRENDING';}else if(vol20>0.4){return'HIGH_VOLATILITY';}else if(Math.abs(trendStrength)<0.05&&vol20<0.2){return'RANGE_BOUND';}else if(volumeTrend>0.5&&Math.abs(trendStrength)>0.05){return'BREAKOUT_POTENTIAL';}else{return'TRANSITIONING';}}// Advanced Order Flow Analysis\nfunction analyzeOrderFlowImbalance(data,index){if(!data||index<5)return 0;const recent5=data.slice(Math.max(0,index-4),index+1);let buyPressure=0;let sellPressure=0;recent5.forEach(d=>{// VWAP 대비 종가 위치로 매수/매도 압력 추정\nconst vwap=(d.high+d.low+d.close)/3;const pressure=(d.close-vwap)/vwap;if(pressure>0){buyPressure+=pressure*d.volume;}else{sellPressure+=Math.abs(pressure)*d.volume;}});const totalPressure=buyPressure+sellPressure;if(totalPressure===0)return 0;return(buyPressure-sellPressure)/totalPressure;}// Institutional Accumulation/Distribution Detection\nfunction detectInstitutionalActivity(data,index){var _current$_flows,_current$_flows2;if(!data||index<20)return{phase:'UNKNOWN',strength:0};const current=data[index];const prev20=data.slice(Math.max(0,index-20),index);// Volume-Price Analysis\nconst avgVolume=prev20.reduce((sum,d)=>sum+d.volume,0)/prev20.length;const volumeRatio=current.volume/avgVolume;// Price Movement Analysis\nconst priceChange=(current.close-prev20[0].close)/prev20[0].close;const dailyRange=(current.high-current.low)/current.close;// Flow Analysis\nconst foreignFlow=toNum(((_current$_flows=current._flows)===null||_current$_flows===void 0?void 0:_current$_flows.외국인합계)||0);const instFlow=toNum(((_current$_flows2=current._flows)===null||_current$_flows2===void 0?void 0:_current$_flows2.기관합계)||0);const smartMoney=foreignFlow+instFlow;// Pattern Recognition\nif(volumeRatio>2&&smartMoney>0&&dailyRange<0.02){return{phase:'ACCUMULATION',strength:Math.min(100,volumeRatio*25)};}else if(volumeRatio>1.5&&smartMoney<0&&priceChange<-0.01){return{phase:'DISTRIBUTION',strength:Math.min(100,volumeRatio*20)};}else if(volumeRatio<0.5&&Math.abs(priceChange)<0.01){return{phase:'CONSOLIDATION',strength:30};}else if(smartMoney>0&&priceChange>0){return{phase:'MARKUP',strength:50};}else if(smartMoney<0&&priceChange<0){return{phase:'MARKDOWN',strength:50};}return{phase:'NEUTRAL',strength:0};}// 기관급 스마트머니 점수 계산 (0-100 스케일)\nexport function calculateInstitutionalSmartMoneyScore(data,index){var _current$_flows3,_current$_flows4,_current$_flows5;// 최소 20일 데이터만 있으면 작동\nif(!data||index<20||index>=data.length)return{score:50,breakdown:{},interpretation:\"데이터 부족\"};const current=data[index];const prev20=data.slice(Math.max(0,index-20),index);const prev60=data.slice(Math.max(0,index-Math.min(60,index)),index);// 데이터가 60일 미만이면 있는 만큼만 사용\nlet breakdown={};let totalScore=0;// Market Regime Adjustment\nconst marketRegime=detectMarketRegime(data,index);let regimeMultiplier=1;switch(marketRegime){case'BULL_TRENDING':regimeMultiplier=1.2;break;case'BEAR_TRENDING':regimeMultiplier=0.8;break;case'HIGH_VOLATILITY':regimeMultiplier=0.7;break;case'BREAKOUT_POTENTIAL':regimeMultiplier=1.3;break;default:regimeMultiplier=1;}breakdown.marketRegime=marketRegime;// 1. Enhanced Flow Analysis with Order Flow Imbalance (30점)\nconst foreignFlow=toNum(((_current$_flows3=current._flows)===null||_current$_flows3===void 0?void 0:_current$_flows3.외국인합계)||0);const instFlow=toNum(((_current$_flows4=current._flows)===null||_current$_flows4===void 0?void 0:_current$_flows4.기관합계)||0);const retailFlow=toNum(((_current$_flows5=current._flows)===null||_current$_flows5===void 0?void 0:_current$_flows5.개인)||0);const totalAbsFlow=Math.abs(foreignFlow)+Math.abs(instFlow)+Math.abs(retailFlow);if(totalAbsFlow>0){const smartMoneyNet=foreignFlow+instFlow;const flowIntensity=smartMoneyNet/totalAbsFlow*20;// Order Flow Imbalance 추가\nconst orderFlowImbalance=analyzeOrderFlowImbalance(data,index);const enhancedFlow=flowIntensity+orderFlowImbalance*10;breakdown.flowIntensity=Math.max(-30,Math.min(30,enhancedFlow));totalScore+=breakdown.flowIntensity;}// 2. Multi-Timeframe Flow Persistence (25점)\nconst recent5Days=data.slice(Math.max(0,index-4),index+1);const recent10Days=data.slice(Math.max(0,index-9),index+1);// Short-term persistence\nlet shortTermScore=0;let consecutiveDays=0;let lastDirection=0;recent5Days.forEach(d=>{var _d$_flows,_d$_flows2;const daySmartMoney=toNum(((_d$_flows=d._flows)===null||_d$_flows===void 0?void 0:_d$_flows.외국인합계)||0)+toNum(((_d$_flows2=d._flows)===null||_d$_flows2===void 0?void 0:_d$_flows2.기관합계)||0);const direction=daySmartMoney>0?1:daySmartMoney<0?-1:0;if(direction===lastDirection&&direction!==0){consecutiveDays++;}else{consecutiveDays=direction!==0?1:0;}lastDirection=direction;});shortTermScore=Math.min(15,consecutiveDays*3*lastDirection);// Long-term consistency\nconst positiveDays=recent10Days.filter(d=>{var _d$_flows3,_d$_flows4;const flow=toNum(((_d$_flows3=d._flows)===null||_d$_flows3===void 0?void 0:_d$_flows3.외국인합계)||0)+toNum(((_d$_flows4=d._flows)===null||_d$_flows4===void 0?void 0:_d$_flows4.기관합계)||0);return flow>0;}).length;const longTermScore=(positiveDays/recent10Days.length-0.5)*20;breakdown.persistence=shortTermScore+longTermScore;totalScore+=breakdown.persistence;// 3. 개인 역행 지표 (15점)\n// 스마트머니와 개인의 반대 포지션 = 긍정 신호\nconst smartTotal=foreignFlow+instFlow;if(smartTotal>0&&retailFlow<0){breakdown.retailDivergence=15;}else if(smartTotal<0&&retailFlow>0){breakdown.retailDivergence=-15;}else{breakdown.retailDivergence=0;}totalScore+=breakdown.retailDivergence;// 4. 누적 수급 모멘텀 (15점)\n// 20일 vs 60일 누적 수급 비교\nconst cum20=prev20.reduce((sum,d)=>{var _d$_flows5,_d$_flows6;return sum+toNum(((_d$_flows5=d._flows)===null||_d$_flows5===void 0?void 0:_d$_flows5.외국인합계)||0)+toNum(((_d$_flows6=d._flows)===null||_d$_flows6===void 0?void 0:_d$_flows6.기관합계)||0);},0);const cum60=prev60.reduce((sum,d)=>{var _d$_flows7,_d$_flows8;return sum+toNum(((_d$_flows7=d._flows)===null||_d$_flows7===void 0?void 0:_d$_flows7.외국인합계)||0)+toNum(((_d$_flows8=d._flows)===null||_d$_flows8===void 0?void 0:_d$_flows8.기관합계)||0);},0);if(prev60.length>0){const avg20=cum20/prev20.length;const avg60=cum60/prev60.length;const momentum=avg20>avg60?15:avg20<avg60*0.5?-15:0;breakdown.momentum=momentum;totalScore+=momentum;}// 5. 대량 거래 감지 (10점)\n// 평균 대비 3배 이상 거래량에서의 수급\nconst avgVolume=prev20.reduce((sum,d)=>sum+toNum(d.volume||0),0)/prev20.length;const isHighVolume=current.volume>avgVolume*2.5;if(isHighVolume){if(smartTotal>0){breakdown.volumeSignal=10;}else if(smartTotal<0){breakdown.volumeSignal=-10;}}else{breakdown.volumeSignal=0;}totalScore+=breakdown.volumeSignal;// 6. Institutional Activity Pattern (20점)\nconst instActivity=detectInstitutionalActivity(data,index);let instScore=0;if(instActivity.phase==='ACCUMULATION'){instScore=instActivity.strength*0.2;}else if(instActivity.phase==='DISTRIBUTION'){instScore=-instActivity.strength*0.2;}else if(instActivity.phase==='MARKUP'&&foreignFlow>0){instScore=15;}else if(instActivity.phase==='MARKDOWN'&&foreignFlow<0){instScore=-15;}// Foreign Leadership Premium\nif(foreignFlow>0&&instFlow<=0){instScore+=5;// 외국인 단독 매수\n}else if(foreignFlow>0&&instFlow>0&&foreignFlow>instFlow*1.5){instScore+=10;// 외국인 주도 매수\n}else if(foreignFlow<0&&instFlow>=0){instScore-=5;// 외국인 단독 매도\n}else if(foreignFlow<0&&instFlow<0&&foreignFlow<instFlow*1.5){instScore-=10;// 외국인 주도 매도\n}breakdown.institutionalPattern=Math.max(-20,Math.min(20,instScore));totalScore+=breakdown.institutionalPattern;// Apply Market Regime Multiplier\ntotalScore*=regimeMultiplier;// 정규화 (0-100 스케일)\nconst normalizedScore=Math.max(0,Math.min(100,totalScore+50));return{score:normalizedScore,breakdown,interpretation:getSmartMoneyInterpretation(normalizedScore)};}// Dynamic Risk-Adjusted Position Sizing\nexport function calculateOptimalPositionSize(data,index){let portfolioValue=arguments.length>2&&arguments[2]!==undefined?arguments[2]:100000000;if(!data||index<20)return{size:0,leverage:1,reasoning:['최소 20일 데이터 필요']};const prev20=data.slice(Math.max(0,index-20),index);const returns=[];for(let i=1;i<prev20.length;i++){returns.push((prev20[i].close-prev20[i-1].close)/prev20[i-1].close);}// Kelly Criterion Modified\nconst avgReturn=returns.reduce((a,b)=>a+b,0)/returns.length;const winRate=returns.filter(r=>r>0).length/returns.length;const avgWin=returns.filter(r=>r>0).reduce((a,b)=>a+b,0)/Math.max(1,returns.filter(r=>r>0).length);const avgLoss=Math.abs(returns.filter(r=>r<0).reduce((a,b)=>a+b,0)/Math.max(1,returns.filter(r=>r<0).length));if(avgLoss===0)return{size:0,leverage:1,reasoning:['Insufficient loss data']};const kellyFraction=(winRate*avgWin-(1-winRate)*avgLoss)/avgWin;const safeKelly=Math.max(0,Math.min(0.25,kellyFraction*0.25));// 1/4 Kelly for safety\n// Volatility Adjustment\nconst vol=Math.sqrt(returns.reduce((sum,r)=>sum+r*r,0)/returns.length)*Math.sqrt(252);const volAdjustment=Math.max(0.5,Math.min(1,0.2/vol));// Lower position for high vol\n// Liquidity Constraint\nconst avgVolume=prev20.reduce((sum,d)=>sum+d.volume*d.close,0)/prev20.length;const maxPosition=avgVolume*0.01;// Max 1% of daily volume\nconst optimalSize=Math.min(portfolioValue*safeKelly*volAdjustment,maxPosition);const reasoning=[\"Kelly Fraction: \".concat((kellyFraction*100).toFixed(2),\"%\"),\"Volatility Adjustment: \".concat((volAdjustment*100).toFixed(0),\"%\"),\"Win Rate: \".concat((winRate*100).toFixed(1),\"%\"),\"Risk-Adjusted Size: \".concat((safeKelly*100).toFixed(2),\"% of portfolio\")];return{size:Math.round(optimalSize),leverage:safeKelly>0.15?1.5:1,reasoning};}// Advanced Technical Signal Composite\nfunction calculateAdvancedTechnicalSignal(data,index){var _data,_data2;if(!data||index<60)return 0;const current=data[index];let signal=0;// 1. Momentum Quality (not just strength)\nconst rsi=current.rsi14||50;const rsiPrev=((_data=data[index-1])===null||_data===void 0?void 0:_data.rsi14)||50;const rsiSlope=rsi-rsiPrev;if(rsi<30&&rsiSlope>0)signal+=20;// Oversold reversal\nelse if(rsi>70&&rsiSlope<0)signal-=20;// Overbought reversal\nelse if(rsi>50&&rsi<70&&rsiSlope>0)signal+=10;// Healthy momentum\nelse if(rsi<50&&rsi>30&&rsiSlope<0)signal-=10;// Weakening\n// 2. MACD Histogram Acceleration\nif(current.macdHistogram&&(_data2=data[index-1])!==null&&_data2!==void 0&&_data2.macdHistogram){const histAccel=current.macdHistogram-data[index-1].macdHistogram;signal+=Math.max(-15,Math.min(15,histAccel*100));}// 3. Volume-Price Confirmation\nconst volMA=data.slice(index-10,index).reduce((sum,d)=>sum+d.volume,0)/10;const priceChange=(current.close-data[index-1].close)/data[index-1].close;const volRatio=current.volume/volMA;if(priceChange>0&&volRatio>1.5)signal+=15;// Volume confirms upside\nelse if(priceChange<0&&volRatio>1.5)signal-=15;// Volume confirms downside\nelse if(Math.abs(priceChange)>0.02&&volRatio<0.7)signal-=10;// No volume support\n// 4. Support/Resistance Proximity\nconst recent20High=Math.max(...data.slice(index-20,index).map(d=>d.high));const recent20Low=Math.min(...data.slice(index-20,index).map(d=>d.low));const range=recent20High-recent20Low;const positionInRange=(current.close-recent20Low)/range;if(positionInRange<0.2)signal+=10;// Near support\nelse if(positionInRange>0.8)signal-=10;// Near resistance\nreturn signal;}// 기관급 종합 매매 신호 계산\nexport function calculateInstitutionalTradingSignal(data,index){// 최소 20일 데이터만 있으면 작동\nif(!data||index<20||index>=data.length)return{signal:0,factors:[],positionSize:{},recommendation:{action:\"WAIT\",description:\"데이터 수집 중\"}};const current=data[index];const factors=[];let totalSignal=0;// Market Regime Context\nconst marketRegime=detectMarketRegime(data,index);factors.push({name:\"시장 레짐\",value:marketRegime,weight:0.0,description:marketRegime});// 1. Advanced Trend Analysis with Multiple Timeframes\nconst adx=calculateADX(data,index,14);const trendDirection=current.close>current.ma20?1:-1;let trendScore=0;if(adx>40){trendScore=trendDirection*30;// Strong trend\n}else if(adx>25){trendScore=trendDirection*20;// Moderate trend\n}else if(adx<20){trendScore=0;// No trend\n}// Multi-timeframe confirmation\nif(current.ma5>current.ma20&&current.ma20>current.ma60){trendScore=Math.max(trendScore,25);// Perfect alignment\n}else if(current.ma5<current.ma20&&current.ma20<current.ma60){trendScore=Math.min(trendScore,-25);// Perfect downtrend\n}factors.push({name:\"멀티타임프레임 추세\",value:trendScore,weight:0.20});totalSignal+=trendScore*0.20;// 2. Enhanced Technical Composite\nconst technicalSignal=calculateAdvancedTechnicalSignal(data,index);factors.push({name:\"고급 기술적 신호\",value:technicalSignal,weight:0.25});totalSignal+=technicalSignal*0.25;// 3. 변동성 조정 수익률 (Volatility-Adjusted Return)\nconst volAdjReturn=calculateVolatilityAdjustedReturn(data,index);factors.push({name:\"변동성 조정 수익률\",value:volAdjReturn*100,weight:0.15});totalSignal+=volAdjReturn*15;// 4. 시장 미시구조 (Market Microstructure)\nconst microstructure=analyzeMarketMicrostructure(data,index);factors.push({name:\"시장 미시구조\",value:microstructure*100,weight:0.20});totalSignal+=microstructure*20;// 5. Enhanced Smart Money Flow with Institutional Patterns\nconst smartMoneyScore=calculateInstitutionalSmartMoneyScore(data,index);const instActivity=detectInstitutionalActivity(data,index);let smartMoneySignal=(smartMoneyScore.score-50)/50;// Boost signal based on institutional phase\nif(instActivity.phase==='ACCUMULATION'){smartMoneySignal=Math.min(1,smartMoneySignal*1.5);}else if(instActivity.phase==='DISTRIBUTION'){smartMoneySignal=Math.max(-1,smartMoneySignal*1.5);}factors.push({name:\"기관 스마트머니\",value:smartMoneySignal*100,weight:0.30,phase:instActivity.phase});totalSignal+=smartMoneySignal*30;// 6. Order Flow Analysis\nconst orderFlowImbalance=analyzeOrderFlowImbalance(data,index);factors.push({name:\"주문 흐름 불균형\",value:orderFlowImbalance*100,weight:0.15});totalSignal+=orderFlowImbalance*15;// Dynamic Risk Adjustment based on Market Regime\nlet riskMultiplier=1;switch(marketRegime){case'HIGH_VOLATILITY':riskMultiplier=0.6;break;case'BEAR_TRENDING':riskMultiplier=0.7;break;case'BULL_TRENDING':riskMultiplier=1.2;break;case'BREAKOUT_POTENTIAL':riskMultiplier=1.1;break;default:riskMultiplier=calculateRiskAdjustment(data,index);}totalSignal*=riskMultiplier;// Calculate Position Sizing\nconst positionSize=calculateOptimalPositionSize(data,index);return{signal:Math.max(-100,Math.min(100,totalSignal)),factors,recommendation:getTradingRecommendation(totalSignal),confidence:calculateSignalConfidence(factors),positionSize,marketRegime,riskMultiplier};}// ADX (Average Directional Index) 계산\nfunction calculateADX(data,index){let period=arguments.length>2&&arguments[2]!==undefined?arguments[2]:14;if(index<period*2)return 0;let plusDM=0,minusDM=0,tr=0;for(let i=index-period+1;i<=index;i++){const curr=data[i];const prev=data[i-1];const highDiff=curr.high-prev.high;const lowDiff=prev.low-curr.low;if(highDiff>lowDiff&&highDiff>0)plusDM+=highDiff;if(lowDiff>highDiff&&lowDiff>0)minusDM+=lowDiff;const trueRange=Math.max(curr.high-curr.low,Math.abs(curr.high-prev.close),Math.abs(curr.low-prev.close));tr+=trueRange;}const plusDI=plusDM/tr*100;const minusDI=minusDM/tr*100;const dx=Math.abs(plusDI-minusDI)/(plusDI+minusDI)*100;return dx;}// Stochastic 오실레이터 계산\nfunction calculateStochastic(data,index){let period=arguments.length>2&&arguments[2]!==undefined?arguments[2]:14;if(index<period)return 50;const slice=data.slice(index-period+1,index+1);const highs=slice.map(d=>d.high);const lows=slice.map(d=>d.low);const highest=Math.max(...highs);const lowest=Math.min(...lows);const current=data[index].close;if(highest===lowest)return 50;return(current-lowest)/(highest-lowest)*100;}// 복합 오실레이터 점수\nfunction calculateOscillatorComposite(rsi,mfi,stochastic){let score=0;// RSI 신호\nif(rsi<30)score+=30;else if(rsi<40)score+=15;else if(rsi>70)score-=30;else if(rsi>60)score-=15;// MFI 신호\nif(mfi<20)score+=25;else if(mfi<35)score+=10;else if(mfi>80)score-=25;else if(mfi>65)score-=10;// Stochastic 신호\nif(stochastic<20)score+=20;else if(stochastic<35)score+=10;else if(stochastic>80)score-=20;else if(stochastic>65)score-=10;// 다이버전스 보너스\nif(rsi<40&&mfi<40&&stochastic<40)score*=1.5;if(rsi>60&&mfi>60&&stochastic>60)score*=1.5;return Math.max(-100,Math.min(100,score));}// 변동성 조정 수익률\nfunction calculateVolatilityAdjustedReturn(data,index){let lookback=arguments.length>2&&arguments[2]!==undefined?arguments[2]:20;if(index<lookback)return 0;const returns=[];for(let i=index-lookback+1;i<=index;i++){const ret=(data[i].close-data[i-1].close)/data[i-1].close;returns.push(ret);}const avgReturn=returns.reduce((a,b)=>a+b,0)/returns.length;const variance=returns.reduce((sum,ret)=>sum+Math.pow(ret-avgReturn,2),0)/returns.length;const volatility=Math.sqrt(variance);if(volatility===0)return 0;// Sharpe Ratio 스타일 계산\nreturn avgReturn/volatility;}// 시장 미시구조 분석\nfunction analyzeMarketMicrostructure(data,index){if(index<20)return 0;const current=data[index];const prev20=data.slice(index-20,index);let score=0;// 1. 가격 효율성 (얼마나 부드럽게 움직이는가)\nconst priceEfficiency=calculatePriceEfficiency(prev20);score+=priceEfficiency*0.3;// 2. 거래량 프로파일 (정상 분포 vs 이상 패턴)\nconst volumeProfile=analyzeVolumeProfile(prev20,current);score+=volumeProfile*0.3;// 3. 스프레드 추정 (고저 차이 기반)\nconst spreadQuality=estimateSpreadQuality(current,prev20);score+=spreadQuality*0.4;return score;}// 가격 효율성 계산\nfunction calculatePriceEfficiency(data){if(data.length<2)return 0;let totalMove=0;let netMove=Math.abs(data[data.length-1].close-data[0].close);for(let i=1;i<data.length;i++){totalMove+=Math.abs(data[i].close-data[i-1].close);}if(totalMove===0)return 0;// 효율성이 높을수록 좋음 (1에 가까울수록 직선 움직임)\nconst efficiency=netMove/totalMove;return efficiency>0.7?1:efficiency>0.3?0.5:-0.5;}// 거래량 프로파일 분석\nfunction analyzeVolumeProfile(historical,current){const avgVolume=historical.reduce((sum,d)=>sum+d.volume,0)/historical.length;const volumeRatio=current.volume/avgVolume;// 적정 거래량 (평균의 0.8 ~ 2배)\nif(volumeRatio>=0.8&&volumeRatio<=2){return 0.5;}else if(volumeRatio>3){// 이상 거래량\nreturn current.close>historical[historical.length-1].close?1:-1;}else if(volumeRatio<0.5){// 거래량 부족\nreturn-0.5;}return 0;}// 스프레드 품질 추정\nfunction estimateSpreadQuality(current,historical){const avgRange=historical.reduce((sum,d)=>sum+(d.high-d.low),0)/historical.length;const currentRange=current.high-current.low;// 스프레드가 평균보다 좁으면 유동성 좋음\nif(currentRange<avgRange*0.7)return 1;if(currentRange<avgRange)return 0.5;if(currentRange>avgRange*1.5)return-1;return 0;}// 위험 조정 계수\nfunction calculateRiskAdjustment(data,index){if(index<60)return 1;const recent20=data.slice(index-20,index);const volatility=calculateVolatility(recent20);// 변동성에 따른 조정 (높은 변동성 = 낮은 신뢰도)\nif(volatility>0.03)return 0.7;// 일 3% 이상 변동성\nif(volatility>0.02)return 0.85;if(volatility<0.01)return 1.1;// 낮은 변동성 = 높은 신뢰도\nreturn 1;}// 변동성 계산\nfunction calculateVolatility(data){if(data.length<2)return 0;const returns=[];for(let i=1;i<data.length;i++){returns.push((data[i].close-data[i-1].close)/data[i-1].close);}const avg=returns.reduce((a,b)=>a+b,0)/returns.length;const variance=returns.reduce((sum,ret)=>sum+Math.pow(ret-avg,2),0)/returns.length;return Math.sqrt(variance);}// 신호 신뢰도 계산\nfunction calculateSignalConfidence(factors){// 모든 팩터가 같은 방향을 가리키면 높은 신뢰도\nconst positiveFactors=factors.filter(f=>f.value>0).length;const negativeFactors=factors.filter(f=>f.value<0).length;const unanimity=Math.max(positiveFactors,negativeFactors)/factors.length;const avgStrength=factors.reduce((sum,f)=>sum+Math.abs(f.value),0)/factors.length;return Math.round((unanimity*0.6+avgStrength/100*0.4)*100);}// 스마트머니 해석 (투자자 친화적)\nfunction getSmartMoneyInterpretation(score){if(score>=80)return\"💰 기관/외인 대량 매집 중 → 강력 매수 시그널\";if(score>=65)return\"📈 스마트머니 순매수 → 매수 고려\";if(score>=50)return\"⚖️ 수급 균형 → 관망 추천\";if(score>=35)return\"📉 스마트머니 이탈 시작 → 주의 필요\";return\"🚨 기관/외인 대량 매도 → 매도 고려\";}// Enhanced Trading Recommendation with Risk Management\nfunction getTradingRecommendation(signal){const urgency=Math.abs(signal)>70?\"즉시\":\"단계적\";const confidence=Math.min(100,Math.abs(signal)*1.2);if(signal>=70){return{action:\"STRONG BUY\",description:\"\".concat(urgency,\" \\uB9E4\\uC218 \\uD3EC\\uC9C0\\uC158 \\uAD6C\\uCD95\"),targetAllocation:\"15-20%\",stopLoss:\"진입가 -3%\",confidence:\"\".concat(confidence,\"%\")};}else if(signal>=40){return{action:\"BUY\",description:\"분할 매수 진행\",targetAllocation:\"10-15%\",stopLoss:\"진입가 -5%\",confidence:\"\".concat(confidence,\"%\")};}else if(signal>=15){return{action:\"ACCUMULATE\",description:\"저가 분할매수 검토\",targetAllocation:\"5-10%\",stopLoss:\"진입가 -7%\",confidence:\"\".concat(confidence,\"%\")};}else if(signal>=-15){return{action:\"HOLD\",description:\"현 포지션 유지\",targetAllocation:\"현재 유지\",stopLoss:\"동적 조정\",confidence:\"\".concat(confidence,\"%\")};}else if(signal>=-40){return{action:\"REDUCE\",description:\"단계적 비중 축소\",targetAllocation:\"50% 감소\",stopLoss:\"즉시 실행\",confidence:\"\".concat(confidence,\"%\")};}else if(signal>=-70){return{action:\"SELL\",description:\"포지션 청산 진행\",targetAllocation:\"20% 이하\",stopLoss:\"N/A\",confidence:\"\".concat(confidence,\"%\")};}return{action:\"EXIT\",description:\"\".concat(urgency,\" \\uC804\\uB7C9 \\uCCAD\\uC0B0\"),targetAllocation:\"0%\",stopLoss:\"N/A\",confidence:\"\".concat(confidence,\"%\")};}// Enhanced VWAP 계산 (다중 앵커 지원)\nexport function calculateEnhancedVWAP(data){let anchorIndices=arguments.length>1&&arguments[1]!==undefined?arguments[1]:[];if(!data||data.length===0)return data;// 기본 앵커: 시작점, 최근 고점, 최근 저점\nif(anchorIndices.length===0){anchorIndices=[0];// 기본값\n// 최근 60일 고점/저점 찾기\nif(data.length>60){const recent60=data.slice(-60);let highIndex=0,lowIndex=0;let highPrice=0,lowPrice=Infinity;recent60.forEach((d,i)=>{const globalIndex=data.length-60+i;if(d.high>highPrice){highPrice=d.high;highIndex=globalIndex;}if(d.low<lowPrice){lowPrice=d.low;lowIndex=globalIndex;}});anchorIndices.push(highIndex,lowIndex);}}// 각 앵커별 VWAP 계산\nconst result=data.map(d=>_objectSpread({},d));anchorIndices.forEach((anchorIndex,anchorNum)=>{let cumPV=0;let cumV=0;for(let i=0;i<result.length;i++){if(i<anchorIndex){result[i][\"vwap\".concat(anchorNum)]=null;continue;}const typicalPrice=(result[i].high+result[i].low+result[i].close)/3;const volume=result[i].volume||0;cumPV+=typicalPrice*volume;cumV+=volume;result[i][\"vwap\".concat(anchorNum)]=cumV>0?cumPV/cumV:typicalPrice;}});// 기본 VWAP (첫 번째 앵커)\nresult.forEach(d=>{d.avwap=d.vwap0;});return result;}// ============================\n// PATTERN RECOGNITION ENGINE\n// ============================\n// 1. 세력 매집 패턴 감지\nexport function detectAccumulationPattern(data,index){if(!data||index<20)return{detected:false,confidence:0};const recent20=data.slice(Math.max(0,index-19),index+1);let signals=0;// Signal 1: 가격 횡보 + 기관 지속 매수\nconst priceRange=Math.max(...recent20.map(d=>d.high))-Math.min(...recent20.map(d=>d.low));const avgPrice=recent20.reduce((sum,d)=>sum+d.close,0)/recent20.length;const priceStable=priceRange/avgPrice<0.1;// 10% 이내 변동\nconst instBuying=recent20.filter(d=>{var _d$_flows9;return(((_d$_flows9=d._flows)===null||_d$_flows9===void 0?void 0:_d$_flows9.기관합계)||0)>0;}).length;if(priceStable&&instBuying>12)signals+=30;// Signal 2: 거래량 감소 + 기관 매수\nconst volTrend=recent20.slice(-5).reduce((sum,d)=>sum+d.volume,0)/recent20.slice(0,5).reduce((sum,d)=>sum+d.volume,0);if(volTrend<0.7&&instBuying>10)signals+=25;// Signal 3: 개인 매도 + 기관/외인 매수 (스마트머니 교체)\nconst smartMoneyBuy=recent20.filter(d=>{var _d$_flows0,_d$_flows1,_d$_flows10;return(((_d$_flows0=d._flows)===null||_d$_flows0===void 0?void 0:_d$_flows0.기관합계)||0)+(((_d$_flows1=d._flows)===null||_d$_flows1===void 0?void 0:_d$_flows1.외국인합계)||0)>0&&(((_d$_flows10=d._flows)===null||_d$_flows10===void 0?void 0:_d$_flows10.개인)||0)<0;}).length;if(smartMoneyBuy>12)signals+=25;// Signal 4: 하단 지지선 반복 테스트\nconst lows=recent20.map(d=>d.low);const minLow=Math.min(...lows);const supportTests=lows.filter(low=>Math.abs(low-minLow)/minLow<0.01).length;if(supportTests>3)signals+=20;return{detected:signals>=60,confidence:Math.min(100,signals),type:'매집',description:signals>=60?'세력 매집 진행 중':null};}// 2. 상승 돌파 패턴\nexport function detectBreakoutPattern(data,index){var _current$_flows6,_current$_flows7;if(!data||index<60)return{detected:false,confidence:0};const current=data[index];const recent20=data.slice(index-19,index+1);const recent60=data.slice(index-59,index+1);let signals=0;// 60일 최고가 돌파\nconst high60=Math.max(...recent60.slice(0,-1).map(d=>d.high));if(current.close>high60)signals+=40;// 거래량 폭발 (평균 대비 200% 이상)\nconst avgVol=recent20.slice(0,-1).reduce((sum,d)=>sum+d.volume,0)/19;if(current.volume>avgVol*2)signals+=30;// 스마트머니 대량 매수\nconst smartMoney=(((_current$_flows6=current._flows)===null||_current$_flows6===void 0?void 0:_current$_flows6.기관합계)||0)+(((_current$_flows7=current._flows)===null||_current$_flows7===void 0?void 0:_current$_flows7.외국인합계)||0);const avgSmartMoney=recent20.slice(0,-1).reduce((sum,d)=>{var _d$_flows11,_d$_flows12;return sum+(((_d$_flows11=d._flows)===null||_d$_flows11===void 0?void 0:_d$_flows11.기관합계)||0)+(((_d$_flows12=d._flows)===null||_d$_flows12===void 0?void 0:_d$_flows12.외국인합계)||0);},0)/19;if(smartMoney>avgSmartMoney*3)signals+=30;return{detected:signals>=70,confidence:Math.min(100,signals),type:'돌파',description:signals>=70?'상승 돌파 신호':null};}// 3. 급락 후 반등 패턴 (Dead Cat Bounce vs Real Reversal)\nexport function detectReversalPattern(data,index){if(!data||index<10)return{detected:false,confidence:0};const recent10=data.slice(index-9,index+1);const current=data[index];// 최근 급락 확인 (-10% 이상)\nconst highPoint=Math.max(...recent10.slice(0,5).map(d=>d.high));const lowPoint=Math.min(...recent10.slice(5).map(d=>d.low));const dropRate=(lowPoint-highPoint)/highPoint;if(dropRate<-0.1){var _current$_flows8,_data$_flows;let signals=0;// 오늘 반등\nif(current.close>data[index-1].close*1.03)signals+=30;// 기관 매수 전환\nif((((_current$_flows8=current._flows)===null||_current$_flows8===void 0?void 0:_current$_flows8.기관합계)||0)>0&&(((_data$_flows=data[index-1]._flows)===null||_data$_flows===void 0?void 0:_data$_flows.기관합계)||0)<=0)signals+=40;// 거래량 증가\nif(current.volume>data[index-1].volume*1.5)signals+=30;return{detected:signals>=60,confidence:Math.min(100,signals),type:'반등',description:signals>=60?'급락 후 반등 시작':null,warning:signals<80?'데드캣 바운스 주의':null};}return{detected:false,confidence:0};}// 4. 매도 타이밍 패턴\nexport function detectDistributionPattern(data,index){var _current$_flows9,_current$_flows0,_current$_flows1;if(!data||index<20)return{detected:false,confidence:0};const recent20=data.slice(index-19,index+1);const current=data[index];let signals=0;// 고점 부근에서 기관 매도\nconst high20=Math.max(...recent20.map(d=>d.high));const nearHigh=current.close>high20*0.95;const instSelling=(((_current$_flows9=current._flows)===null||_current$_flows9===void 0?void 0:_current$_flows9.기관합계)||0)<0;if(nearHigh&&instSelling)signals+=40;// 거래량 증가 + 가격 정체\nconst priceChange=(current.close-recent20[0].close)/recent20[0].close;const volIncrease=current.volume>recent20[0].volume*1.5;if(Math.abs(priceChange)<0.02&&volIncrease&&instSelling)signals+=30;// 개인 매수 폭증 (물량 떠넘기기)\nconst retailBuying=(((_current$_flows0=current._flows)===null||_current$_flows0===void 0?void 0:_current$_flows0.개인)||0)>0;const retailAmount=Math.abs(((_current$_flows1=current._flows)===null||_current$_flows1===void 0?void 0:_current$_flows1.개인)||0);const avgRetail=recent20.slice(0,-1).reduce((sum,d)=>{var _d$_flows13;return sum+Math.abs(((_d$_flows13=d._flows)===null||_d$_flows13===void 0?void 0:_d$_flows13.개인)||0);},0)/19;if(retailBuying&&retailAmount>avgRetail*2&&instSelling)signals+=30;return{detected:signals>=60,confidence:Math.min(100,signals),type:'분산',description:signals>=60?'고점 분산 매도 진행':null};}// ============================\n// ENTRY/EXIT SIGNAL SYSTEM\n// ============================\nexport function generateTradingSignals(data,index){if(!data||index<60)return null;const current=data[index];const signals=[];// 패턴 체크\nconst accumulation=detectAccumulationPattern(data,index);const breakout=detectBreakoutPattern(data,index);const reversal=detectReversalPattern(data,index);const distribution=detectDistributionPattern(data,index);// 기술적 지표\nconst tradingSignal=calculateInstitutionalTradingSignal(data,index);const smartMoney=calculateInstitutionalSmartMoneyScore(data,index);// BUY SIGNALS\nif(accumulation.detected&&smartMoney.score>65){signals.push({type:'BUY',strength:'STRONG',entry:current.close,stopLoss:current.close*0.95,target1:current.close*1.05,target2:current.close*1.10,target3:current.close*1.20,reason:'세력 매집 완료 + 스마트머니 유입',confidence:(accumulation.confidence+smartMoney.score)/2,riskReward:2.0});}if(breakout.detected&&tradingSignal.signal>60){signals.push({type:'BUY',strength:'STRONG',entry:current.close,stopLoss:current.close*0.97,target1:current.close*1.08,target2:current.close*1.15,target3:current.close*1.30,reason:'돌파 매수 신호',confidence:breakout.confidence,riskReward:3.5});}if(reversal.detected&&!reversal.warning){signals.push({type:'BUY',strength:'MODERATE',entry:current.close,stopLoss:current.close*0.93,target1:current.close*1.07,target2:current.close*1.12,reason:'급락 후 반등',confidence:reversal.confidence,riskReward:1.7,warning:'분할 매수 권장'});}// SELL SIGNALS\nif(distribution.detected){signals.push({type:'SELL',strength:'STRONG',exit:current.close,reason:'기관 분산 매도',confidence:distribution.confidence,action:'전량 매도 또는 50% 이상 비중 축소'});}if(tradingSignal.signal<-60&&smartMoney.score<30){signals.push({type:'SELL',strength:'STRONG',exit:current.close,reason:'종합 매도 신호 + 스마트머니 이탈',confidence:85,action:'즉시 청산'});}// Risk Management\nconst volatility=calculateVolatility(data.slice(index-19,index+1));const positionSize=calculateOptimalPositionSize(data,index);return{signals,bestSignal:signals.sort((a,b)=>b.confidence-a.confidence)[0],riskLevel:volatility>0.03?'HIGH':volatility>0.02?'MEDIUM':'LOW',suggestedPosition:positionSize,summary:signals.length>0?\"\".concat(signals.filter(s=>s.type==='BUY').length,\"\\uAC1C \\uB9E4\\uC218, \").concat(signals.filter(s=>s.type==='SELL').length,\"\\uAC1C \\uB9E4\\uB3C4 \\uC2E0\\uD638\"):'관망'};}// Advanced Backtesting with Realistic Execution\nexport function backtestSignalPerformance(data){let lookback=arguments.length>1&&arguments[1]!==undefined?arguments[1]:60;if(!data||data.length<lookback+20)return null;const trades=[];let capital=100000000;// 1억원 시작\nlet position=0;let entryPrice=0;for(let i=lookback;i<data.length-1;i++){const signals=generateTradingSignals(data,i);if(!signals||!signals.bestSignal)continue;const signal=signals.bestSignal;const current=data[i];const next=data[i+1];// BUY 실행\nif(signal.type==='BUY'&&position===0){const shares=Math.floor(capital*0.3/next.open);// 30% 포지션\nposition=shares;entryPrice=next.open;capital-=shares*next.open*1.003;// 수수료 0.3%\ntrades.push({date:next.date,type:'BUY',price:next.open,shares,reason:signal.reason});}// SELL 실행 또는 손절/익절\nif(position>0){const currentPrice=next.close;const profitRate=(currentPrice-entryPrice)/entryPrice;// 익절 체크 (10% 수익)\nif(profitRate>0.10){capital+=position*currentPrice*0.997;// 수수료 차감\ntrades.push({date:next.date,type:'SELL',price:currentPrice,shares:position,profit:profitRate*100,reason:'목표가 도달 (익절)'});position=0;}// 손절 체크 (-5% 손실)\nelse if(profitRate<-0.05){capital+=position*currentPrice*0.997;trades.push({date:next.date,type:'SELL',price:currentPrice,shares:position,profit:profitRate*100,reason:'손절'});position=0;}// 매도 신호\nelse if(signal.type==='SELL'&&signal.strength==='STRONG'){capital+=position*currentPrice*0.997;trades.push({date:next.date,type:'SELL',price:currentPrice,shares:position,profit:profitRate*100,reason:signal.reason});position=0;}}}// 최종 정산\nif(position>0){const lastPrice=data[data.length-1].close;capital+=position*lastPrice*0.997;}// 성과 계산\nconst totalReturn=(capital-100000000)/100000000*100;const winTrades=trades.filter(t=>t.type==='SELL'&&t.profit>0);const loseTrades=trades.filter(t=>t.type==='SELL'&&t.profit<=0);const winRate=winTrades.length/(winTrades.length+loseTrades.length)*100;const avgWin=winTrades.length>0?winTrades.reduce((sum,t)=>sum+t.profit,0)/winTrades.length:0;const avgLoss=loseTrades.length>0?Math.abs(loseTrades.reduce((sum,t)=>sum+t.profit,0)/loseTrades.length):0;// 최대 낙폭 계산\nlet maxCapital=100000000;let maxDrawdown=0;let runningCapital=100000000;trades.forEach(trade=>{if(trade.type==='SELL'){runningCapital*=1+trade.profit/100;maxCapital=Math.max(maxCapital,runningCapital);const drawdown=(maxCapital-runningCapital)/maxCapital;maxDrawdown=Math.max(maxDrawdown,drawdown);}});return{totalReturn:totalReturn.toFixed(2),totalTrades:trades.length,winRate:winRate.toFixed(1),avgWin:avgWin.toFixed(2),avgLoss:avgLoss.toFixed(2),profitFactor:avgLoss>0?(avgWin/avgLoss).toFixed(2):'N/A',maxDrawdown:(maxDrawdown*100).toFixed(2),sharpeRatio:calculateSharpeRatio(trades),trades:trades.slice(-10),// 최근 10개 거래\nfinalCapital:capital};}// Sharpe Ratio 계산\nfunction calculateSharpeRatio(trades){if(trades.length<2)return 0;const returns=trades.filter(t=>t.type==='SELL').map(t=>t.profit/100);if(returns.length===0)return 0;const avgReturn=returns.reduce((a,b)=>a+b,0)/returns.length;const variance=returns.reduce((sum,r)=>sum+Math.pow(r-avgReturn,2),0)/returns.length;const stdDev=Math.sqrt(variance);return stdDev>0?(avgReturn/stdDev*Math.sqrt(252)).toFixed(2):0;}const institutionalAnalytics={calculateInstitutionalSmartMoneyScore,calculateInstitutionalTradingSignal,calculateEnhancedVWAP,detectMarketRegime,calculateOptimalPositionSize,backtestSignalPerformance,generateTradingSignals,detectAccumulationPattern,detectBreakoutPattern,detectReversalPattern,detectDistributionPattern};export default institutionalAnalytics;","map":{"version":3,"names":["toNum","detectMarketRegime","data","index","prev20","slice","Math","max","prev60","ma20","reduce","sum","d","close","length","ma60","currentPrice","trendStrength","momentum","returns20","i","push","vol20","sqrt","r","avgVol20","volume","avgVol60","volumeTrend","abs","analyzeOrderFlowImbalance","recent5","buyPressure","sellPressure","forEach","vwap","high","low","pressure","totalPressure","detectInstitutionalActivity","_current$_flows","_current$_flows2","phase","strength","current","avgVolume","volumeRatio","priceChange","dailyRange","foreignFlow","_flows","외국인합계","instFlow","기관합계","smartMoney","min","calculateInstitutionalSmartMoneyScore","_current$_flows3","_current$_flows4","_current$_flows5","score","breakdown","interpretation","totalScore","marketRegime","regimeMultiplier","retailFlow","개인","totalAbsFlow","smartMoneyNet","flowIntensity","orderFlowImbalance","enhancedFlow","recent5Days","recent10Days","shortTermScore","consecutiveDays","lastDirection","_d$_flows","_d$_flows2","daySmartMoney","direction","positiveDays","filter","_d$_flows3","_d$_flows4","flow","longTermScore","persistence","smartTotal","retailDivergence","cum20","_d$_flows5","_d$_flows6","cum60","_d$_flows7","_d$_flows8","avg20","avg60","isHighVolume","volumeSignal","instActivity","instScore","institutionalPattern","normalizedScore","getSmartMoneyInterpretation","calculateOptimalPositionSize","portfolioValue","arguments","undefined","size","leverage","reasoning","returns","avgReturn","a","b","winRate","avgWin","avgLoss","kellyFraction","safeKelly","vol","volAdjustment","maxPosition","optimalSize","concat","toFixed","round","calculateAdvancedTechnicalSignal","_data","_data2","signal","rsi","rsi14","rsiPrev","rsiSlope","macdHistogram","histAccel","volMA","volRatio","recent20High","map","recent20Low","range","positionInRange","calculateInstitutionalTradingSignal","factors","positionSize","recommendation","action","description","totalSignal","name","value","weight","adx","calculateADX","trendDirection","trendScore","ma5","technicalSignal","volAdjReturn","calculateVolatilityAdjustedReturn","microstructure","analyzeMarketMicrostructure","smartMoneyScore","smartMoneySignal","riskMultiplier","calculateRiskAdjustment","getTradingRecommendation","confidence","calculateSignalConfidence","period","plusDM","minusDM","tr","curr","prev","highDiff","lowDiff","trueRange","plusDI","minusDI","dx","calculateStochastic","highs","lows","highest","lowest","calculateOscillatorComposite","mfi","stochastic","lookback","ret","variance","pow","volatility","priceEfficiency","calculatePriceEfficiency","volumeProfile","analyzeVolumeProfile","spreadQuality","estimateSpreadQuality","totalMove","netMove","efficiency","historical","avgRange","currentRange","recent20","calculateVolatility","avg","positiveFactors","f","negativeFactors","unanimity","avgStrength","urgency","targetAllocation","stopLoss","calculateEnhancedVWAP","anchorIndices","recent60","highIndex","lowIndex","highPrice","lowPrice","Infinity","globalIndex","result","_objectSpread","anchorIndex","anchorNum","cumPV","cumV","typicalPrice","avwap","vwap0","detectAccumulationPattern","detected","signals","priceRange","avgPrice","priceStable","instBuying","_d$_flows9","volTrend","smartMoneyBuy","_d$_flows0","_d$_flows1","_d$_flows10","minLow","supportTests","type","detectBreakoutPattern","_current$_flows6","_current$_flows7","high60","avgVol","avgSmartMoney","_d$_flows11","_d$_flows12","detectReversalPattern","recent10","highPoint","lowPoint","dropRate","_current$_flows8","_data$_flows","warning","detectDistributionPattern","_current$_flows9","_current$_flows0","_current$_flows1","high20","nearHigh","instSelling","volIncrease","retailBuying","retailAmount","avgRetail","_d$_flows13","generateTradingSignals","accumulation","breakout","reversal","distribution","tradingSignal","entry","target1","target2","target3","reason","riskReward","exit","bestSignal","sort","riskLevel","suggestedPosition","summary","s","backtestSignalPerformance","trades","capital","position","entryPrice","next","shares","floor","open","date","price","profitRate","profit","lastPrice","totalReturn","winTrades","t","loseTrades","maxCapital","maxDrawdown","runningCapital","trade","drawdown","totalTrades","profitFactor","sharpeRatio","calculateSharpeRatio","finalCapital","stdDev","institutionalAnalytics"],"sources":["C:/Users/kloud/OneDrive/Desktop/Paradise/src/utils/institutionalAnalytics.js"],"sourcesContent":["// =============================\n// Institutional-Grade Analytics Module  \n// Advanced Quantitative Trading Algorithms\n// Real Money Making System v2.0\n// =============================\n\nimport { toNum } from './dataUtils';\n\n// Market Regime Detection\nexport function detectMarketRegime(data, index) {\n  if (!data || index < 20) return 'UNKNOWN';\n  \n  const prev20 = data.slice(Math.max(0, index - 20), index + 1);\n  const prev60 = data.slice(Math.max(0, index - 60), index + 1);\n  \n  // 1. Trend Analysis\n  const ma20 = prev20.reduce((sum, d) => sum + d.close, 0) / prev20.length;\n  const ma60 = prev60.reduce((sum, d) => sum + d.close, 0) / prev60.length;\n  const currentPrice = data[index].close;\n  \n  const trendStrength = (currentPrice - ma60) / ma60;\n  const momentum = (ma20 - ma60) / ma60;\n  \n  // 2. Volatility Regime\n  const returns20 = [];\n  for (let i = 1; i < prev20.length; i++) {\n    returns20.push((prev20[i].close - prev20[i-1].close) / prev20[i-1].close);\n  }\n  const vol20 = Math.sqrt(returns20.reduce((sum, r) => sum + r*r, 0) / returns20.length) * Math.sqrt(252);\n  \n  // 3. Volume Regime\n  const avgVol20 = prev20.reduce((sum, d) => sum + d.volume, 0) / prev20.length;\n  const avgVol60 = prev60.reduce((sum, d) => sum + d.volume, 0) / prev60.length;\n  const volumeTrend = (avgVol20 - avgVol60) / avgVol60;\n  \n  // Regime Classification\n  if (trendStrength > 0.1 && momentum > 0.05 && vol20 < 0.3) {\n    return 'BULL_TRENDING';\n  } else if (trendStrength < -0.1 && momentum < -0.05) {\n    return 'BEAR_TRENDING';\n  } else if (vol20 > 0.4) {\n    return 'HIGH_VOLATILITY';\n  } else if (Math.abs(trendStrength) < 0.05 && vol20 < 0.2) {\n    return 'RANGE_BOUND';\n  } else if (volumeTrend > 0.5 && Math.abs(trendStrength) > 0.05) {\n    return 'BREAKOUT_POTENTIAL';\n  } else {\n    return 'TRANSITIONING';\n  }\n}\n\n// Advanced Order Flow Analysis\nfunction analyzeOrderFlowImbalance(data, index) {\n  if (!data || index < 5) return 0;\n  \n  const recent5 = data.slice(Math.max(0, index - 4), index + 1);\n  let buyPressure = 0;\n  let sellPressure = 0;\n  \n  recent5.forEach(d => {\n    // VWAP 대비 종가 위치로 매수/매도 압력 추정\n    const vwap = (d.high + d.low + d.close) / 3;\n    const pressure = (d.close - vwap) / vwap;\n    \n    if (pressure > 0) {\n      buyPressure += pressure * d.volume;\n    } else {\n      sellPressure += Math.abs(pressure) * d.volume;\n    }\n  });\n  \n  const totalPressure = buyPressure + sellPressure;\n  if (totalPressure === 0) return 0;\n  \n  return (buyPressure - sellPressure) / totalPressure;\n}\n\n// Institutional Accumulation/Distribution Detection\nfunction detectInstitutionalActivity(data, index) {\n  if (!data || index < 20) return { phase: 'UNKNOWN', strength: 0 };\n  \n  const current = data[index];\n  const prev20 = data.slice(Math.max(0, index - 20), index);\n  \n  // Volume-Price Analysis\n  const avgVolume = prev20.reduce((sum, d) => sum + d.volume, 0) / prev20.length;\n  const volumeRatio = current.volume / avgVolume;\n  \n  // Price Movement Analysis\n  const priceChange = (current.close - prev20[0].close) / prev20[0].close;\n  const dailyRange = (current.high - current.low) / current.close;\n  \n  // Flow Analysis\n  const foreignFlow = toNum(current._flows?.외국인합계 || 0);\n  const instFlow = toNum(current._flows?.기관합계 || 0);\n  const smartMoney = foreignFlow + instFlow;\n  \n  // Pattern Recognition\n  if (volumeRatio > 2 && smartMoney > 0 && dailyRange < 0.02) {\n    return { phase: 'ACCUMULATION', strength: Math.min(100, volumeRatio * 25) };\n  } else if (volumeRatio > 1.5 && smartMoney < 0 && priceChange < -0.01) {\n    return { phase: 'DISTRIBUTION', strength: Math.min(100, volumeRatio * 20) };\n  } else if (volumeRatio < 0.5 && Math.abs(priceChange) < 0.01) {\n    return { phase: 'CONSOLIDATION', strength: 30 };\n  } else if (smartMoney > 0 && priceChange > 0) {\n    return { phase: 'MARKUP', strength: 50 };\n  } else if (smartMoney < 0 && priceChange < 0) {\n    return { phase: 'MARKDOWN', strength: 50 };\n  }\n  \n  return { phase: 'NEUTRAL', strength: 0 };\n}\n\n// 기관급 스마트머니 점수 계산 (0-100 스케일)\nexport function calculateInstitutionalSmartMoneyScore(data, index) {\n  // 최소 20일 데이터만 있으면 작동\n  if (!data || index < 20 || index >= data.length) return { score: 50, breakdown: {}, interpretation: \"데이터 부족\" };\n  \n  const current = data[index];\n  const prev20 = data.slice(Math.max(0, index - 20), index);\n  const prev60 = data.slice(Math.max(0, index - Math.min(60, index)), index); // 데이터가 60일 미만이면 있는 만큼만 사용\n  \n  let breakdown = {};\n  let totalScore = 0;\n  \n  // Market Regime Adjustment\n  const marketRegime = detectMarketRegime(data, index);\n  let regimeMultiplier = 1;\n  switch(marketRegime) {\n    case 'BULL_TRENDING': regimeMultiplier = 1.2; break;\n    case 'BEAR_TRENDING': regimeMultiplier = 0.8; break;\n    case 'HIGH_VOLATILITY': regimeMultiplier = 0.7; break;\n    case 'BREAKOUT_POTENTIAL': regimeMultiplier = 1.3; break;\n    default: regimeMultiplier = 1;\n  }\n  breakdown.marketRegime = marketRegime;\n  \n  // 1. Enhanced Flow Analysis with Order Flow Imbalance (30점)\n  const foreignFlow = toNum(current._flows?.외국인합계 || 0);\n  const instFlow = toNum(current._flows?.기관합계 || 0);\n  const retailFlow = toNum(current._flows?.개인 || 0);\n  const totalAbsFlow = Math.abs(foreignFlow) + Math.abs(instFlow) + Math.abs(retailFlow);\n  \n  if (totalAbsFlow > 0) {\n    const smartMoneyNet = foreignFlow + instFlow;\n    const flowIntensity = (smartMoneyNet / totalAbsFlow) * 20;\n    \n    // Order Flow Imbalance 추가\n    const orderFlowImbalance = analyzeOrderFlowImbalance(data, index);\n    const enhancedFlow = flowIntensity + (orderFlowImbalance * 10);\n    \n    breakdown.flowIntensity = Math.max(-30, Math.min(30, enhancedFlow));\n    totalScore += breakdown.flowIntensity;\n  }\n  \n  // 2. Multi-Timeframe Flow Persistence (25점)\n  const recent5Days = data.slice(Math.max(0, index - 4), index + 1);\n  const recent10Days = data.slice(Math.max(0, index - 9), index + 1);\n  \n  // Short-term persistence\n  let shortTermScore = 0;\n  let consecutiveDays = 0;\n  let lastDirection = 0;\n  \n  recent5Days.forEach(d => {\n    const daySmartMoney = toNum(d._flows?.외국인합계 || 0) + toNum(d._flows?.기관합계 || 0);\n    const direction = daySmartMoney > 0 ? 1 : (daySmartMoney < 0 ? -1 : 0);\n    \n    if (direction === lastDirection && direction !== 0) {\n      consecutiveDays++;\n    } else {\n      consecutiveDays = direction !== 0 ? 1 : 0;\n    }\n    lastDirection = direction;\n  });\n  \n  shortTermScore = Math.min(15, consecutiveDays * 3 * lastDirection);\n  \n  // Long-term consistency\n  const positiveDays = recent10Days.filter(d => {\n    const flow = toNum(d._flows?.외국인합계 || 0) + toNum(d._flows?.기관합계 || 0);\n    return flow > 0;\n  }).length;\n  \n  const longTermScore = (positiveDays / recent10Days.length - 0.5) * 20;\n  \n  breakdown.persistence = shortTermScore + longTermScore;\n  totalScore += breakdown.persistence;\n  \n  // 3. 개인 역행 지표 (15점)\n  // 스마트머니와 개인의 반대 포지션 = 긍정 신호\n  const smartTotal = foreignFlow + instFlow;\n  if (smartTotal > 0 && retailFlow < 0) {\n    breakdown.retailDivergence = 15;\n  } else if (smartTotal < 0 && retailFlow > 0) {\n    breakdown.retailDivergence = -15;\n  } else {\n    breakdown.retailDivergence = 0;\n  }\n  totalScore += breakdown.retailDivergence;\n  \n  // 4. 누적 수급 모멘텀 (15점)\n  // 20일 vs 60일 누적 수급 비교\n  const cum20 = prev20.reduce((sum, d) => {\n    return sum + toNum(d._flows?.외국인합계 || 0) + toNum(d._flows?.기관합계 || 0);\n  }, 0);\n  \n  const cum60 = prev60.reduce((sum, d) => {\n    return sum + toNum(d._flows?.외국인합계 || 0) + toNum(d._flows?.기관합계 || 0);\n  }, 0);\n  \n  if (prev60.length > 0) {\n    const avg20 = cum20 / prev20.length;\n    const avg60 = cum60 / prev60.length;\n    const momentum = avg20 > avg60 ? 15 : (avg20 < avg60 * 0.5 ? -15 : 0);\n    breakdown.momentum = momentum;\n    totalScore += momentum;\n  }\n  \n  // 5. 대량 거래 감지 (10점)\n  // 평균 대비 3배 이상 거래량에서의 수급\n  const avgVolume = prev20.reduce((sum, d) => sum + toNum(d.volume || 0), 0) / prev20.length;\n  const isHighVolume = current.volume > avgVolume * 2.5;\n  \n  if (isHighVolume) {\n    if (smartTotal > 0) {\n      breakdown.volumeSignal = 10;\n    } else if (smartTotal < 0) {\n      breakdown.volumeSignal = -10;\n    }\n  } else {\n    breakdown.volumeSignal = 0;\n  }\n  totalScore += breakdown.volumeSignal;\n  \n  // 6. Institutional Activity Pattern (20점)\n  const instActivity = detectInstitutionalActivity(data, index);\n  let instScore = 0;\n  \n  if (instActivity.phase === 'ACCUMULATION') {\n    instScore = instActivity.strength * 0.2;\n  } else if (instActivity.phase === 'DISTRIBUTION') {\n    instScore = -instActivity.strength * 0.2;\n  } else if (instActivity.phase === 'MARKUP' && foreignFlow > 0) {\n    instScore = 15;\n  } else if (instActivity.phase === 'MARKDOWN' && foreignFlow < 0) {\n    instScore = -15;\n  }\n  \n  // Foreign Leadership Premium\n  if (foreignFlow > 0 && instFlow <= 0) {\n    instScore += 5; // 외국인 단독 매수\n  } else if (foreignFlow > 0 && instFlow > 0 && foreignFlow > instFlow * 1.5) {\n    instScore += 10; // 외국인 주도 매수\n  } else if (foreignFlow < 0 && instFlow >= 0) {\n    instScore -= 5; // 외국인 단독 매도\n  } else if (foreignFlow < 0 && instFlow < 0 && foreignFlow < instFlow * 1.5) {\n    instScore -= 10; // 외국인 주도 매도\n  }\n  \n  breakdown.institutionalPattern = Math.max(-20, Math.min(20, instScore));\n  totalScore += breakdown.institutionalPattern;\n  \n  // Apply Market Regime Multiplier\n  totalScore *= regimeMultiplier;\n  \n  // 정규화 (0-100 스케일)\n  const normalizedScore = Math.max(0, Math.min(100, totalScore + 50));\n  \n  return {\n    score: normalizedScore,\n    breakdown,\n    interpretation: getSmartMoneyInterpretation(normalizedScore)\n  };\n}\n\n// Dynamic Risk-Adjusted Position Sizing\nexport function calculateOptimalPositionSize(data, index, portfolioValue = 100000000) {\n  if (!data || index < 20) return { size: 0, leverage: 1, reasoning: ['최소 20일 데이터 필요'] };\n  \n  const prev20 = data.slice(Math.max(0, index - 20), index);\n  const returns = [];\n  \n  for (let i = 1; i < prev20.length; i++) {\n    returns.push((prev20[i].close - prev20[i-1].close) / prev20[i-1].close);\n  }\n  \n  // Kelly Criterion Modified\n  const avgReturn = returns.reduce((a, b) => a + b, 0) / returns.length;\n  const winRate = returns.filter(r => r > 0).length / returns.length;\n  const avgWin = returns.filter(r => r > 0).reduce((a, b) => a + b, 0) / Math.max(1, returns.filter(r => r > 0).length);\n  const avgLoss = Math.abs(returns.filter(r => r < 0).reduce((a, b) => a + b, 0) / Math.max(1, returns.filter(r => r < 0).length));\n  \n  if (avgLoss === 0) return { size: 0, leverage: 1, reasoning: ['Insufficient loss data'] };\n  \n  const kellyFraction = (winRate * avgWin - (1 - winRate) * avgLoss) / avgWin;\n  const safeKelly = Math.max(0, Math.min(0.25, kellyFraction * 0.25)); // 1/4 Kelly for safety\n  \n  // Volatility Adjustment\n  const vol = Math.sqrt(returns.reduce((sum, r) => sum + r*r, 0) / returns.length) * Math.sqrt(252);\n  const volAdjustment = Math.max(0.5, Math.min(1, 0.2 / vol)); // Lower position for high vol\n  \n  // Liquidity Constraint\n  const avgVolume = prev20.reduce((sum, d) => sum + d.volume * d.close, 0) / prev20.length;\n  const maxPosition = avgVolume * 0.01; // Max 1% of daily volume\n  \n  const optimalSize = Math.min(\n    portfolioValue * safeKelly * volAdjustment,\n    maxPosition\n  );\n  \n  const reasoning = [\n    `Kelly Fraction: ${(kellyFraction * 100).toFixed(2)}%`,\n    `Volatility Adjustment: ${(volAdjustment * 100).toFixed(0)}%`,\n    `Win Rate: ${(winRate * 100).toFixed(1)}%`,\n    `Risk-Adjusted Size: ${(safeKelly * 100).toFixed(2)}% of portfolio`\n  ];\n  \n  return {\n    size: Math.round(optimalSize),\n    leverage: safeKelly > 0.15 ? 1.5 : 1,\n    reasoning\n  };\n}\n\n// Advanced Technical Signal Composite\nfunction calculateAdvancedTechnicalSignal(data, index) {\n  if (!data || index < 60) return 0;\n  \n  const current = data[index];\n  let signal = 0;\n  \n  // 1. Momentum Quality (not just strength)\n  const rsi = current.rsi14 || 50;\n  const rsiPrev = data[index - 1]?.rsi14 || 50;\n  const rsiSlope = rsi - rsiPrev;\n  \n  if (rsi < 30 && rsiSlope > 0) signal += 20; // Oversold reversal\n  else if (rsi > 70 && rsiSlope < 0) signal -= 20; // Overbought reversal\n  else if (rsi > 50 && rsi < 70 && rsiSlope > 0) signal += 10; // Healthy momentum\n  else if (rsi < 50 && rsi > 30 && rsiSlope < 0) signal -= 10; // Weakening\n  \n  // 2. MACD Histogram Acceleration\n  if (current.macdHistogram && data[index - 1]?.macdHistogram) {\n    const histAccel = current.macdHistogram - data[index - 1].macdHistogram;\n    signal += Math.max(-15, Math.min(15, histAccel * 100));\n  }\n  \n  // 3. Volume-Price Confirmation\n  const volMA = data.slice(index - 10, index).reduce((sum, d) => sum + d.volume, 0) / 10;\n  const priceChange = (current.close - data[index - 1].close) / data[index - 1].close;\n  const volRatio = current.volume / volMA;\n  \n  if (priceChange > 0 && volRatio > 1.5) signal += 15; // Volume confirms upside\n  else if (priceChange < 0 && volRatio > 1.5) signal -= 15; // Volume confirms downside\n  else if (Math.abs(priceChange) > 0.02 && volRatio < 0.7) signal -= 10; // No volume support\n  \n  // 4. Support/Resistance Proximity\n  const recent20High = Math.max(...data.slice(index - 20, index).map(d => d.high));\n  const recent20Low = Math.min(...data.slice(index - 20, index).map(d => d.low));\n  const range = recent20High - recent20Low;\n  const positionInRange = (current.close - recent20Low) / range;\n  \n  if (positionInRange < 0.2) signal += 10; // Near support\n  else if (positionInRange > 0.8) signal -= 10; // Near resistance\n  \n  return signal;\n}\n\n// 기관급 종합 매매 신호 계산\nexport function calculateInstitutionalTradingSignal(data, index) {\n  // 최소 20일 데이터만 있으면 작동\n  if (!data || index < 20 || index >= data.length) return { signal: 0, factors: [], positionSize: {}, recommendation: { action: \"WAIT\", description: \"데이터 수집 중\" } };\n  \n  const current = data[index];\n  const factors = [];\n  let totalSignal = 0;\n  \n  // Market Regime Context\n  const marketRegime = detectMarketRegime(data, index);\n  factors.push({\n    name: \"시장 레짐\",\n    value: marketRegime,\n    weight: 0.0,\n    description: marketRegime\n  });\n  \n  // 1. Advanced Trend Analysis with Multiple Timeframes\n  const adx = calculateADX(data, index, 14);\n  const trendDirection = current.close > current.ma20 ? 1 : -1;\n  let trendScore = 0;\n  \n  if (adx > 40) {\n    trendScore = trendDirection * 30; // Strong trend\n  } else if (adx > 25) {\n    trendScore = trendDirection * 20; // Moderate trend\n  } else if (adx < 20) {\n    trendScore = 0; // No trend\n  }\n  \n  // Multi-timeframe confirmation\n  if (current.ma5 > current.ma20 && current.ma20 > current.ma60) {\n    trendScore = Math.max(trendScore, 25); // Perfect alignment\n  } else if (current.ma5 < current.ma20 && current.ma20 < current.ma60) {\n    trendScore = Math.min(trendScore, -25); // Perfect downtrend\n  }\n  \n  factors.push({\n    name: \"멀티타임프레임 추세\",\n    value: trendScore,\n    weight: 0.20\n  });\n  totalSignal += trendScore * 0.20;\n  \n  // 2. Enhanced Technical Composite\n  const technicalSignal = calculateAdvancedTechnicalSignal(data, index);\n  factors.push({\n    name: \"고급 기술적 신호\",\n    value: technicalSignal,\n    weight: 0.25\n  });\n  totalSignal += technicalSignal * 0.25;\n  \n  // 3. 변동성 조정 수익률 (Volatility-Adjusted Return)\n  const volAdjReturn = calculateVolatilityAdjustedReturn(data, index);\n  factors.push({\n    name: \"변동성 조정 수익률\",\n    value: volAdjReturn * 100,\n    weight: 0.15\n  });\n  totalSignal += volAdjReturn * 15;\n  \n  // 4. 시장 미시구조 (Market Microstructure)\n  const microstructure = analyzeMarketMicrostructure(data, index);\n  factors.push({\n    name: \"시장 미시구조\",\n    value: microstructure * 100,\n    weight: 0.20\n  });\n  totalSignal += microstructure * 20;\n  \n  // 5. Enhanced Smart Money Flow with Institutional Patterns\n  const smartMoneyScore = calculateInstitutionalSmartMoneyScore(data, index);\n  const instActivity = detectInstitutionalActivity(data, index);\n  \n  let smartMoneySignal = (smartMoneyScore.score - 50) / 50;\n  \n  // Boost signal based on institutional phase\n  if (instActivity.phase === 'ACCUMULATION') {\n    smartMoneySignal = Math.min(1, smartMoneySignal * 1.5);\n  } else if (instActivity.phase === 'DISTRIBUTION') {\n    smartMoneySignal = Math.max(-1, smartMoneySignal * 1.5);\n  }\n  \n  factors.push({\n    name: \"기관 스마트머니\",\n    value: smartMoneySignal * 100,\n    weight: 0.30,\n    phase: instActivity.phase\n  });\n  totalSignal += smartMoneySignal * 30;\n  \n  // 6. Order Flow Analysis\n  const orderFlowImbalance = analyzeOrderFlowImbalance(data, index);\n  factors.push({\n    name: \"주문 흐름 불균형\",\n    value: orderFlowImbalance * 100,\n    weight: 0.15\n  });\n  totalSignal += orderFlowImbalance * 15;\n  \n  // Dynamic Risk Adjustment based on Market Regime\n  let riskMultiplier = 1;\n  switch(marketRegime) {\n    case 'HIGH_VOLATILITY':\n      riskMultiplier = 0.6;\n      break;\n    case 'BEAR_TRENDING':\n      riskMultiplier = 0.7;\n      break;\n    case 'BULL_TRENDING':\n      riskMultiplier = 1.2;\n      break;\n    case 'BREAKOUT_POTENTIAL':\n      riskMultiplier = 1.1;\n      break;\n    default:\n      riskMultiplier = calculateRiskAdjustment(data, index);\n  }\n  \n  totalSignal *= riskMultiplier;\n  \n  // Calculate Position Sizing\n  const positionSize = calculateOptimalPositionSize(data, index);\n  \n  return {\n    signal: Math.max(-100, Math.min(100, totalSignal)),\n    factors,\n    recommendation: getTradingRecommendation(totalSignal),\n    confidence: calculateSignalConfidence(factors),\n    positionSize,\n    marketRegime,\n    riskMultiplier\n  };\n}\n\n// ADX (Average Directional Index) 계산\nfunction calculateADX(data, index, period = 14) {\n  if (index < period * 2) return 0;\n  \n  let plusDM = 0, minusDM = 0, tr = 0;\n  \n  for (let i = index - period + 1; i <= index; i++) {\n    const curr = data[i];\n    const prev = data[i - 1];\n    \n    const highDiff = curr.high - prev.high;\n    const lowDiff = prev.low - curr.low;\n    \n    if (highDiff > lowDiff && highDiff > 0) plusDM += highDiff;\n    if (lowDiff > highDiff && lowDiff > 0) minusDM += lowDiff;\n    \n    const trueRange = Math.max(\n      curr.high - curr.low,\n      Math.abs(curr.high - prev.close),\n      Math.abs(curr.low - prev.close)\n    );\n    tr += trueRange;\n  }\n  \n  const plusDI = (plusDM / tr) * 100;\n  const minusDI = (minusDM / tr) * 100;\n  const dx = Math.abs(plusDI - minusDI) / (plusDI + minusDI) * 100;\n  \n  return dx;\n}\n\n// Stochastic 오실레이터 계산\nfunction calculateStochastic(data, index, period = 14) {\n  if (index < period) return 50;\n  \n  const slice = data.slice(index - period + 1, index + 1);\n  const highs = slice.map(d => d.high);\n  const lows = slice.map(d => d.low);\n  \n  const highest = Math.max(...highs);\n  const lowest = Math.min(...lows);\n  const current = data[index].close;\n  \n  if (highest === lowest) return 50;\n  \n  return ((current - lowest) / (highest - lowest)) * 100;\n}\n\n// 복합 오실레이터 점수\nfunction calculateOscillatorComposite(rsi, mfi, stochastic) {\n  let score = 0;\n  \n  // RSI 신호\n  if (rsi < 30) score += 30;\n  else if (rsi < 40) score += 15;\n  else if (rsi > 70) score -= 30;\n  else if (rsi > 60) score -= 15;\n  \n  // MFI 신호\n  if (mfi < 20) score += 25;\n  else if (mfi < 35) score += 10;\n  else if (mfi > 80) score -= 25;\n  else if (mfi > 65) score -= 10;\n  \n  // Stochastic 신호\n  if (stochastic < 20) score += 20;\n  else if (stochastic < 35) score += 10;\n  else if (stochastic > 80) score -= 20;\n  else if (stochastic > 65) score -= 10;\n  \n  // 다이버전스 보너스\n  if (rsi < 40 && mfi < 40 && stochastic < 40) score *= 1.5;\n  if (rsi > 60 && mfi > 60 && stochastic > 60) score *= 1.5;\n  \n  return Math.max(-100, Math.min(100, score));\n}\n\n// 변동성 조정 수익률\nfunction calculateVolatilityAdjustedReturn(data, index, lookback = 20) {\n  if (index < lookback) return 0;\n  \n  const returns = [];\n  for (let i = index - lookback + 1; i <= index; i++) {\n    const ret = (data[i].close - data[i - 1].close) / data[i - 1].close;\n    returns.push(ret);\n  }\n  \n  const avgReturn = returns.reduce((a, b) => a + b, 0) / returns.length;\n  const variance = returns.reduce((sum, ret) => sum + Math.pow(ret - avgReturn, 2), 0) / returns.length;\n  const volatility = Math.sqrt(variance);\n  \n  if (volatility === 0) return 0;\n  \n  // Sharpe Ratio 스타일 계산\n  return avgReturn / volatility;\n}\n\n// 시장 미시구조 분석\nfunction analyzeMarketMicrostructure(data, index) {\n  if (index < 20) return 0;\n  \n  const current = data[index];\n  const prev20 = data.slice(index - 20, index);\n  \n  let score = 0;\n  \n  // 1. 가격 효율성 (얼마나 부드럽게 움직이는가)\n  const priceEfficiency = calculatePriceEfficiency(prev20);\n  score += priceEfficiency * 0.3;\n  \n  // 2. 거래량 프로파일 (정상 분포 vs 이상 패턴)\n  const volumeProfile = analyzeVolumeProfile(prev20, current);\n  score += volumeProfile * 0.3;\n  \n  // 3. 스프레드 추정 (고저 차이 기반)\n  const spreadQuality = estimateSpreadQuality(current, prev20);\n  score += spreadQuality * 0.4;\n  \n  return score;\n}\n\n// 가격 효율성 계산\nfunction calculatePriceEfficiency(data) {\n  if (data.length < 2) return 0;\n  \n  let totalMove = 0;\n  let netMove = Math.abs(data[data.length - 1].close - data[0].close);\n  \n  for (let i = 1; i < data.length; i++) {\n    totalMove += Math.abs(data[i].close - data[i - 1].close);\n  }\n  \n  if (totalMove === 0) return 0;\n  \n  // 효율성이 높을수록 좋음 (1에 가까울수록 직선 움직임)\n  const efficiency = netMove / totalMove;\n  return efficiency > 0.7 ? 1 : (efficiency > 0.3 ? 0.5 : -0.5);\n}\n\n// 거래량 프로파일 분석\nfunction analyzeVolumeProfile(historical, current) {\n  const avgVolume = historical.reduce((sum, d) => sum + d.volume, 0) / historical.length;\n  const volumeRatio = current.volume / avgVolume;\n  \n  // 적정 거래량 (평균의 0.8 ~ 2배)\n  if (volumeRatio >= 0.8 && volumeRatio <= 2) {\n    return 0.5;\n  } else if (volumeRatio > 3) {\n    // 이상 거래량\n    return current.close > historical[historical.length - 1].close ? 1 : -1;\n  } else if (volumeRatio < 0.5) {\n    // 거래량 부족\n    return -0.5;\n  }\n  \n  return 0;\n}\n\n// 스프레드 품질 추정\nfunction estimateSpreadQuality(current, historical) {\n  const avgRange = historical.reduce((sum, d) => sum + (d.high - d.low), 0) / historical.length;\n  const currentRange = current.high - current.low;\n  \n  // 스프레드가 평균보다 좁으면 유동성 좋음\n  if (currentRange < avgRange * 0.7) return 1;\n  if (currentRange < avgRange) return 0.5;\n  if (currentRange > avgRange * 1.5) return -1;\n  \n  return 0;\n}\n\n// 위험 조정 계수\nfunction calculateRiskAdjustment(data, index) {\n  if (index < 60) return 1;\n  \n  const recent20 = data.slice(index - 20, index);\n  const volatility = calculateVolatility(recent20);\n  \n  // 변동성에 따른 조정 (높은 변동성 = 낮은 신뢰도)\n  if (volatility > 0.03) return 0.7;  // 일 3% 이상 변동성\n  if (volatility > 0.02) return 0.85;\n  if (volatility < 0.01) return 1.1;  // 낮은 변동성 = 높은 신뢰도\n  \n  return 1;\n}\n\n// 변동성 계산\nfunction calculateVolatility(data) {\n  if (data.length < 2) return 0;\n  \n  const returns = [];\n  for (let i = 1; i < data.length; i++) {\n    returns.push((data[i].close - data[i - 1].close) / data[i - 1].close);\n  }\n  \n  const avg = returns.reduce((a, b) => a + b, 0) / returns.length;\n  const variance = returns.reduce((sum, ret) => sum + Math.pow(ret - avg, 2), 0) / returns.length;\n  \n  return Math.sqrt(variance);\n}\n\n// 신호 신뢰도 계산\nfunction calculateSignalConfidence(factors) {\n  // 모든 팩터가 같은 방향을 가리키면 높은 신뢰도\n  const positiveFactors = factors.filter(f => f.value > 0).length;\n  const negativeFactors = factors.filter(f => f.value < 0).length;\n  \n  const unanimity = Math.max(positiveFactors, negativeFactors) / factors.length;\n  const avgStrength = factors.reduce((sum, f) => sum + Math.abs(f.value), 0) / factors.length;\n  \n  return Math.round((unanimity * 0.6 + avgStrength / 100 * 0.4) * 100);\n}\n\n// 스마트머니 해석 (투자자 친화적)\nfunction getSmartMoneyInterpretation(score) {\n  if (score >= 80) return \"💰 기관/외인 대량 매집 중 → 강력 매수 시그널\";\n  if (score >= 65) return \"📈 스마트머니 순매수 → 매수 고려\";\n  if (score >= 50) return \"⚖️ 수급 균형 → 관망 추천\";\n  if (score >= 35) return \"📉 스마트머니 이탈 시작 → 주의 필요\";\n  return \"🚨 기관/외인 대량 매도 → 매도 고려\";\n}\n\n// Enhanced Trading Recommendation with Risk Management\nfunction getTradingRecommendation(signal) {\n  const urgency = Math.abs(signal) > 70 ? \"즉시\" : \"단계적\";\n  const confidence = Math.min(100, Math.abs(signal) * 1.2);\n  \n  if (signal >= 70) {\n    return {\n      action: \"STRONG BUY\",\n      description: `${urgency} 매수 포지션 구축`,\n      targetAllocation: \"15-20%\",\n      stopLoss: \"진입가 -3%\",\n      confidence: `${confidence}%`\n    };\n  } else if (signal >= 40) {\n    return {\n      action: \"BUY\",\n      description: \"분할 매수 진행\",\n      targetAllocation: \"10-15%\",\n      stopLoss: \"진입가 -5%\",\n      confidence: `${confidence}%`\n    };\n  } else if (signal >= 15) {\n    return {\n      action: \"ACCUMULATE\",\n      description: \"저가 분할매수 검토\",\n      targetAllocation: \"5-10%\",\n      stopLoss: \"진입가 -7%\",\n      confidence: `${confidence}%`\n    };\n  } else if (signal >= -15) {\n    return {\n      action: \"HOLD\",\n      description: \"현 포지션 유지\",\n      targetAllocation: \"현재 유지\",\n      stopLoss: \"동적 조정\",\n      confidence: `${confidence}%`\n    };\n  } else if (signal >= -40) {\n    return {\n      action: \"REDUCE\",\n      description: \"단계적 비중 축소\",\n      targetAllocation: \"50% 감소\",\n      stopLoss: \"즉시 실행\",\n      confidence: `${confidence}%`\n    };\n  } else if (signal >= -70) {\n    return {\n      action: \"SELL\",\n      description: \"포지션 청산 진행\",\n      targetAllocation: \"20% 이하\",\n      stopLoss: \"N/A\",\n      confidence: `${confidence}%`\n    };\n  }\n  return {\n    action: \"EXIT\",\n    description: `${urgency} 전량 청산`,\n    targetAllocation: \"0%\",\n    stopLoss: \"N/A\",\n    confidence: `${confidence}%`\n  };\n}\n\n// Enhanced VWAP 계산 (다중 앵커 지원)\nexport function calculateEnhancedVWAP(data, anchorIndices = []) {\n  if (!data || data.length === 0) return data;\n  \n  // 기본 앵커: 시작점, 최근 고점, 최근 저점\n  if (anchorIndices.length === 0) {\n    anchorIndices = [0]; // 기본값\n    \n    // 최근 60일 고점/저점 찾기\n    if (data.length > 60) {\n      const recent60 = data.slice(-60);\n      let highIndex = 0, lowIndex = 0;\n      let highPrice = 0, lowPrice = Infinity;\n      \n      recent60.forEach((d, i) => {\n        const globalIndex = data.length - 60 + i;\n        if (d.high > highPrice) {\n          highPrice = d.high;\n          highIndex = globalIndex;\n        }\n        if (d.low < lowPrice) {\n          lowPrice = d.low;\n          lowIndex = globalIndex;\n        }\n      });\n      \n      anchorIndices.push(highIndex, lowIndex);\n    }\n  }\n  \n  // 각 앵커별 VWAP 계산\n  const result = data.map(d => ({ ...d }));\n  \n  anchorIndices.forEach((anchorIndex, anchorNum) => {\n    let cumPV = 0;\n    let cumV = 0;\n    \n    for (let i = 0; i < result.length; i++) {\n      if (i < anchorIndex) {\n        result[i][`vwap${anchorNum}`] = null;\n        continue;\n      }\n      \n      const typicalPrice = (result[i].high + result[i].low + result[i].close) / 3;\n      const volume = result[i].volume || 0;\n      \n      cumPV += typicalPrice * volume;\n      cumV += volume;\n      \n      result[i][`vwap${anchorNum}`] = cumV > 0 ? cumPV / cumV : typicalPrice;\n    }\n  });\n  \n  // 기본 VWAP (첫 번째 앵커)\n  result.forEach(d => {\n    d.avwap = d.vwap0;\n  });\n  \n  return result;\n}\n\n// ============================\n// PATTERN RECOGNITION ENGINE\n// ============================\n\n// 1. 세력 매집 패턴 감지\nexport function detectAccumulationPattern(data, index) {\n  if (!data || index < 20) return { detected: false, confidence: 0 };\n  \n  const recent20 = data.slice(Math.max(0, index - 19), index + 1);\n  let signals = 0;\n  \n  // Signal 1: 가격 횡보 + 기관 지속 매수\n  const priceRange = Math.max(...recent20.map(d => d.high)) - Math.min(...recent20.map(d => d.low));\n  const avgPrice = recent20.reduce((sum, d) => sum + d.close, 0) / recent20.length;\n  const priceStable = (priceRange / avgPrice) < 0.1; // 10% 이내 변동\n  \n  const instBuying = recent20.filter(d => (d._flows?.기관합계 || 0) > 0).length;\n  if (priceStable && instBuying > 12) signals += 30;\n  \n  // Signal 2: 거래량 감소 + 기관 매수\n  const volTrend = recent20.slice(-5).reduce((sum, d) => sum + d.volume, 0) / \n                   recent20.slice(0, 5).reduce((sum, d) => sum + d.volume, 0);\n  if (volTrend < 0.7 && instBuying > 10) signals += 25;\n  \n  // Signal 3: 개인 매도 + 기관/외인 매수 (스마트머니 교체)\n  const smartMoneyBuy = recent20.filter(d => \n    (d._flows?.기관합계 || 0) + (d._flows?.외국인합계 || 0) > 0 &&\n    (d._flows?.개인 || 0) < 0\n  ).length;\n  if (smartMoneyBuy > 12) signals += 25;\n  \n  // Signal 4: 하단 지지선 반복 테스트\n  const lows = recent20.map(d => d.low);\n  const minLow = Math.min(...lows);\n  const supportTests = lows.filter(low => Math.abs(low - minLow) / minLow < 0.01).length;\n  if (supportTests > 3) signals += 20;\n  \n  return {\n    detected: signals >= 60,\n    confidence: Math.min(100, signals),\n    type: '매집',\n    description: signals >= 60 ? '세력 매집 진행 중' : null\n  };\n}\n\n// 2. 상승 돌파 패턴\nexport function detectBreakoutPattern(data, index) {\n  if (!data || index < 60) return { detected: false, confidence: 0 };\n  \n  const current = data[index];\n  const recent20 = data.slice(index - 19, index + 1);\n  const recent60 = data.slice(index - 59, index + 1);\n  \n  let signals = 0;\n  \n  // 60일 최고가 돌파\n  const high60 = Math.max(...recent60.slice(0, -1).map(d => d.high));\n  if (current.close > high60) signals += 40;\n  \n  // 거래량 폭발 (평균 대비 200% 이상)\n  const avgVol = recent20.slice(0, -1).reduce((sum, d) => sum + d.volume, 0) / 19;\n  if (current.volume > avgVol * 2) signals += 30;\n  \n  // 스마트머니 대량 매수\n  const smartMoney = (current._flows?.기관합계 || 0) + (current._flows?.외국인합계 || 0);\n  const avgSmartMoney = recent20.slice(0, -1).reduce((sum, d) => \n    sum + (d._flows?.기관합계 || 0) + (d._flows?.외국인합계 || 0), 0) / 19;\n  if (smartMoney > avgSmartMoney * 3) signals += 30;\n  \n  return {\n    detected: signals >= 70,\n    confidence: Math.min(100, signals),\n    type: '돌파',\n    description: signals >= 70 ? '상승 돌파 신호' : null\n  };\n}\n\n// 3. 급락 후 반등 패턴 (Dead Cat Bounce vs Real Reversal)\nexport function detectReversalPattern(data, index) {\n  if (!data || index < 10) return { detected: false, confidence: 0 };\n  \n  const recent10 = data.slice(index - 9, index + 1);\n  const current = data[index];\n  \n  // 최근 급락 확인 (-10% 이상)\n  const highPoint = Math.max(...recent10.slice(0, 5).map(d => d.high));\n  const lowPoint = Math.min(...recent10.slice(5).map(d => d.low));\n  const dropRate = (lowPoint - highPoint) / highPoint;\n  \n  if (dropRate < -0.1) {\n    let signals = 0;\n    \n    // 오늘 반등\n    if (current.close > data[index-1].close * 1.03) signals += 30;\n    \n    // 기관 매수 전환\n    if ((current._flows?.기관합계 || 0) > 0 && \n        (data[index-1]._flows?.기관합계 || 0) <= 0) signals += 40;\n    \n    // 거래량 증가\n    if (current.volume > data[index-1].volume * 1.5) signals += 30;\n    \n    return {\n      detected: signals >= 60,\n      confidence: Math.min(100, signals),\n      type: '반등',\n      description: signals >= 60 ? '급락 후 반등 시작' : null,\n      warning: signals < 80 ? '데드캣 바운스 주의' : null\n    };\n  }\n  \n  return { detected: false, confidence: 0 };\n}\n\n// 4. 매도 타이밍 패턴\nexport function detectDistributionPattern(data, index) {\n  if (!data || index < 20) return { detected: false, confidence: 0 };\n  \n  const recent20 = data.slice(index - 19, index + 1);\n  const current = data[index];\n  let signals = 0;\n  \n  // 고점 부근에서 기관 매도\n  const high20 = Math.max(...recent20.map(d => d.high));\n  const nearHigh = current.close > high20 * 0.95;\n  const instSelling = (current._flows?.기관합계 || 0) < 0;\n  \n  if (nearHigh && instSelling) signals += 40;\n  \n  // 거래량 증가 + 가격 정체\n  const priceChange = (current.close - recent20[0].close) / recent20[0].close;\n  const volIncrease = current.volume > recent20[0].volume * 1.5;\n  \n  if (Math.abs(priceChange) < 0.02 && volIncrease && instSelling) signals += 30;\n  \n  // 개인 매수 폭증 (물량 떠넘기기)\n  const retailBuying = (current._flows?.개인 || 0) > 0;\n  const retailAmount = Math.abs(current._flows?.개인 || 0);\n  const avgRetail = recent20.slice(0, -1).reduce((sum, d) => \n    sum + Math.abs(d._flows?.개인 || 0), 0) / 19;\n  \n  if (retailBuying && retailAmount > avgRetail * 2 && instSelling) signals += 30;\n  \n  return {\n    detected: signals >= 60,\n    confidence: Math.min(100, signals),\n    type: '분산',\n    description: signals >= 60 ? '고점 분산 매도 진행' : null\n  };\n}\n\n// ============================\n// ENTRY/EXIT SIGNAL SYSTEM\n// ============================\n\nexport function generateTradingSignals(data, index) {\n  if (!data || index < 60) return null;\n  \n  const current = data[index];\n  const signals = [];\n  \n  // 패턴 체크\n  const accumulation = detectAccumulationPattern(data, index);\n  const breakout = detectBreakoutPattern(data, index);\n  const reversal = detectReversalPattern(data, index);\n  const distribution = detectDistributionPattern(data, index);\n  \n  // 기술적 지표\n  const tradingSignal = calculateInstitutionalTradingSignal(data, index);\n  const smartMoney = calculateInstitutionalSmartMoneyScore(data, index);\n  \n  // BUY SIGNALS\n  if (accumulation.detected && smartMoney.score > 65) {\n    signals.push({\n      type: 'BUY',\n      strength: 'STRONG',\n      entry: current.close,\n      stopLoss: current.close * 0.95,\n      target1: current.close * 1.05,\n      target2: current.close * 1.10,\n      target3: current.close * 1.20,\n      reason: '세력 매집 완료 + 스마트머니 유입',\n      confidence: (accumulation.confidence + smartMoney.score) / 2,\n      riskReward: 2.0\n    });\n  }\n  \n  if (breakout.detected && tradingSignal.signal > 60) {\n    signals.push({\n      type: 'BUY',\n      strength: 'STRONG',\n      entry: current.close,\n      stopLoss: current.close * 0.97,\n      target1: current.close * 1.08,\n      target2: current.close * 1.15,\n      target3: current.close * 1.30,\n      reason: '돌파 매수 신호',\n      confidence: breakout.confidence,\n      riskReward: 3.5\n    });\n  }\n  \n  if (reversal.detected && !reversal.warning) {\n    signals.push({\n      type: 'BUY',\n      strength: 'MODERATE',\n      entry: current.close,\n      stopLoss: current.close * 0.93,\n      target1: current.close * 1.07,\n      target2: current.close * 1.12,\n      reason: '급락 후 반등',\n      confidence: reversal.confidence,\n      riskReward: 1.7,\n      warning: '분할 매수 권장'\n    });\n  }\n  \n  // SELL SIGNALS\n  if (distribution.detected) {\n    signals.push({\n      type: 'SELL',\n      strength: 'STRONG',\n      exit: current.close,\n      reason: '기관 분산 매도',\n      confidence: distribution.confidence,\n      action: '전량 매도 또는 50% 이상 비중 축소'\n    });\n  }\n  \n  if (tradingSignal.signal < -60 && smartMoney.score < 30) {\n    signals.push({\n      type: 'SELL',\n      strength: 'STRONG',\n      exit: current.close,\n      reason: '종합 매도 신호 + 스마트머니 이탈',\n      confidence: 85,\n      action: '즉시 청산'\n    });\n  }\n  \n  // Risk Management\n  const volatility = calculateVolatility(data.slice(index - 19, index + 1));\n  const positionSize = calculateOptimalPositionSize(data, index);\n  \n  return {\n    signals,\n    bestSignal: signals.sort((a, b) => b.confidence - a.confidence)[0],\n    riskLevel: volatility > 0.03 ? 'HIGH' : volatility > 0.02 ? 'MEDIUM' : 'LOW',\n    suggestedPosition: positionSize,\n    summary: signals.length > 0 ? \n      `${signals.filter(s => s.type === 'BUY').length}개 매수, ${signals.filter(s => s.type === 'SELL').length}개 매도 신호` :\n      '관망'\n  };\n}\n\n// Advanced Backtesting with Realistic Execution\nexport function backtestSignalPerformance(data, lookback = 60) {\n  if (!data || data.length < lookback + 20) return null;\n  \n  const trades = [];\n  let capital = 100000000; // 1억원 시작\n  let position = 0;\n  let entryPrice = 0;\n  \n  for (let i = lookback; i < data.length - 1; i++) {\n    const signals = generateTradingSignals(data, i);\n    \n    if (!signals || !signals.bestSignal) continue;\n    \n    const signal = signals.bestSignal;\n    const current = data[i];\n    const next = data[i + 1];\n    \n    // BUY 실행\n    if (signal.type === 'BUY' && position === 0) {\n      const shares = Math.floor((capital * 0.3) / next.open); // 30% 포지션\n      position = shares;\n      entryPrice = next.open;\n      capital -= shares * next.open * 1.003; // 수수료 0.3%\n      \n      trades.push({\n        date: next.date,\n        type: 'BUY',\n        price: next.open,\n        shares,\n        reason: signal.reason\n      });\n    }\n    \n    // SELL 실행 또는 손절/익절\n    if (position > 0) {\n      const currentPrice = next.close;\n      const profitRate = (currentPrice - entryPrice) / entryPrice;\n      \n      // 익절 체크 (10% 수익)\n      if (profitRate > 0.10) {\n        capital += position * currentPrice * 0.997; // 수수료 차감\n        trades.push({\n          date: next.date,\n          type: 'SELL',\n          price: currentPrice,\n          shares: position,\n          profit: profitRate * 100,\n          reason: '목표가 도달 (익절)'\n        });\n        position = 0;\n      }\n      // 손절 체크 (-5% 손실)\n      else if (profitRate < -0.05) {\n        capital += position * currentPrice * 0.997;\n        trades.push({\n          date: next.date,\n          type: 'SELL',\n          price: currentPrice,\n          shares: position,\n          profit: profitRate * 100,\n          reason: '손절'\n        });\n        position = 0;\n      }\n      // 매도 신호\n      else if (signal.type === 'SELL' && signal.strength === 'STRONG') {\n        capital += position * currentPrice * 0.997;\n        trades.push({\n          date: next.date,\n          type: 'SELL',\n          price: currentPrice,\n          shares: position,\n          profit: profitRate * 100,\n          reason: signal.reason\n        });\n        position = 0;\n      }\n    }\n  }\n  \n  // 최종 정산\n  if (position > 0) {\n    const lastPrice = data[data.length - 1].close;\n    capital += position * lastPrice * 0.997;\n  }\n  \n  // 성과 계산\n  const totalReturn = ((capital - 100000000) / 100000000) * 100;\n  const winTrades = trades.filter(t => t.type === 'SELL' && t.profit > 0);\n  const loseTrades = trades.filter(t => t.type === 'SELL' && t.profit <= 0);\n  const winRate = winTrades.length / (winTrades.length + loseTrades.length) * 100;\n  \n  const avgWin = winTrades.length > 0 ? \n    winTrades.reduce((sum, t) => sum + t.profit, 0) / winTrades.length : 0;\n  const avgLoss = loseTrades.length > 0 ?\n    Math.abs(loseTrades.reduce((sum, t) => sum + t.profit, 0) / loseTrades.length) : 0;\n  \n  // 최대 낙폭 계산\n  let maxCapital = 100000000;\n  let maxDrawdown = 0;\n  let runningCapital = 100000000;\n  \n  trades.forEach(trade => {\n    if (trade.type === 'SELL') {\n      runningCapital *= (1 + trade.profit / 100);\n      maxCapital = Math.max(maxCapital, runningCapital);\n      const drawdown = (maxCapital - runningCapital) / maxCapital;\n      maxDrawdown = Math.max(maxDrawdown, drawdown);\n    }\n  });\n  \n  return {\n    totalReturn: totalReturn.toFixed(2),\n    totalTrades: trades.length,\n    winRate: winRate.toFixed(1),\n    avgWin: avgWin.toFixed(2),\n    avgLoss: avgLoss.toFixed(2),\n    profitFactor: avgLoss > 0 ? (avgWin / avgLoss).toFixed(2) : 'N/A',\n    maxDrawdown: (maxDrawdown * 100).toFixed(2),\n    sharpeRatio: calculateSharpeRatio(trades),\n    trades: trades.slice(-10), // 최근 10개 거래\n    finalCapital: capital\n  };\n}\n\n// Sharpe Ratio 계산\nfunction calculateSharpeRatio(trades) {\n  if (trades.length < 2) return 0;\n  \n  const returns = trades\n    .filter(t => t.type === 'SELL')\n    .map(t => t.profit / 100);\n  \n  if (returns.length === 0) return 0;\n  \n  const avgReturn = returns.reduce((a, b) => a + b, 0) / returns.length;\n  const variance = returns.reduce((sum, r) => sum + Math.pow(r - avgReturn, 2), 0) / returns.length;\n  const stdDev = Math.sqrt(variance);\n  \n  return stdDev > 0 ? (avgReturn / stdDev * Math.sqrt(252)).toFixed(2) : 0;\n}\n\nconst institutionalAnalytics = {\n  calculateInstitutionalSmartMoneyScore,\n  calculateInstitutionalTradingSignal,\n  calculateEnhancedVWAP,\n  detectMarketRegime,\n  calculateOptimalPositionSize,\n  backtestSignalPerformance,\n  generateTradingSignals,\n  detectAccumulationPattern,\n  detectBreakoutPattern,\n  detectReversalPattern,\n  detectDistributionPattern\n};\n\nexport default institutionalAnalytics;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}